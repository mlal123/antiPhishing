DQpEZWFyIENhcm9saW5hIENvbW11bml0eToNCg0KV2VsY29tZSBiYWNrIHRvIGNhbXB1
cy4gV2UgaG9wZSBldmVyeW9uZSBoYWQgYSByZXN0ZnVsIGFuZCByZWxheGluZyBicmVh
ay4NCg0KQXMgd2UgYmVnaW4gMjAxOCwgd2Ugd2lsbCBjb250aW51ZSB0byBhZGRyZXNz
IG1hbnkgcHJpb3JpdGllcyBhbmQgbm9uZSBpcyBtb3JlIGltcG9ydGFudCB0aGFuIHBy
b3RlY3RpbmcgdGhlIHNhZmV0eSBvZiBvdXIgY2FtcHVzIGNvbW11bml0eS4gVGhlIGlz
c3VlIG9mIHNleHVhbCBoYXJhc3NtZW50IGlzIG9uIHRoZSBtaW5kcyBvZiBldmVyeW9u
ZSwgYXMgd2UgaGF2ZSB3YXRjaGVkIHRob3VzYW5kcyBvZiB3b21lbiBhY3Jvc3MgdGhl
IG5hdGlvbiBjb3VyYWdlb3VzbHkgY29tZSBmb3J3YXJkIHRvIHRlbGwgdGhlaXIgc3Rv
cmllcy4gVGhlICNNZVRvbyBtb3ZlbWVudCBoYXMgc3RhcnRlZCBhIHBvd2VyZnVsIGFu
ZCBpbXBvcnRhbnQgZGlhbG9ndWUgaW4gb3VyIG5hdGlvbiBhbmQgYXJvdW5kIHRoZSB3
b3JsZCwgYW5kIGl04oCZcyBoZWxwaW5nIGluc3BpcmUgYSB0cmFuc2Zvcm1hdGl2ZSBh
bmQgcG9zaXRpdmUgY2hhbmdlIGluIG91ciBzb2NpZXR5Lg0KDQpBbmQgd2Ugd2FudCB0
byBtYWtlIHN1cmUgb3VyIGNhbXB1cyBpc27igJl0IGp1c3QgYSBwYXJ0IG9mIHRoZSBj
b252ZXJzYXRpb24sIGJ1dCBkb2luZyBhbGwgd2UgY2FuIHRvIGVuZ2FnZSBhbmQgY3Jl
YXRlIHBvc2l0aXZlIGNoYW5nZSByaWdodCBoZXJlLiBUaGlzIGlzIG1vcmUgdGhhbiBh
IG1vdmVtZW50OyBpdOKAmXMgYWJvdXQgY3JlYXRpbmcgYSBjdWx0dXJlIHdoZXJlIGFs
bCBvZiB1cyBjYW4gZmVlbCBmcmVlIHRvIHB1cnN1ZSBvdXIgcGFzc2lvbnMgYW5kIGRy
ZWFtcyB3aXRob3V0IGZlYXIgb2YgaGFyYXNzbWVudC4NCg0KV2UgYXJlIHRha2luZyBh
IGZyZXNoIGFuZCBjcml0aWNhbCBsb29rIGF0IHBvbGljaWVzIGFuZCBwcm9jZWR1cmVz
IGFjcm9zcyB0aGUgVW5pdmVyc2l0eSB0byBtYWtlIHN1cmUgd2UgYXJlIGRvaW5nIGV2
ZXJ5dGhpbmcgd2UgY2FuIHRvIGNyZWF0ZSBhbiBpbmNsdXNpdmUgYW5kIHJlc3BlY3Rm
dWwgY3VsdHVyZSBhdCBDYXJvbGluYS4gV2hlbiB3ZSBsZWFybiBhYm91dCBwcm9ibGVt
cywgd2Ugd2lsbCB0YWtlIHN0ZXBzIHRvIGFkZHJlc3MgdGhlbSBhbmQgaG9sZCBwZW9w
bGUgYWNjb3VudGFibGUuIFdlIGFsc28gYXJlIHdvcmtpbmcgdG8gaW1wcm92ZSBwcmV2
ZW50aW9uIG1lYXN1cmVzLCBpbmNsdWRpbmcgZXZhbHVhdGluZyBhbmQgZW5oYW5jaW5n
IG91ciB0cmFpbmluZyBwcm9ncmFtcy4gRGlzY3JpbWluYXRpb24gYW5kIGhhcmFzc21l
bnQgYXJlIGNvdW50ZXIgdG8gb3VyIFVuaXZlcnNpdHnigJlzIGNvcmUgdmFsdWVzIGFu
ZCBtdXN0IG5ldmVyIGJlIHRvbGVyYXRlZCwgYW5kIHlldCB3ZSBrbm93IHRoYXQgdGhl
c2Ugc2VyaW91cyBvZmZlbnNlcyBtYXkgaGFwcGVuIGFueXdoZXJlLCBpbmNsdWRpbmcg
b24gb3VyIGNhbXB1cy4gSWYgeW91IGhhdmUgZXhwZXJpZW5jZWQgc2V4dWFsIG9yIGdl
bmRlci1iYXNlZCBoYXJhc3NtZW50IG9yIGFueSBmb3JtIG9mIGRpc2NyaW1pbmF0aW9u
IG9yIHlvdSBrbm93IHNvbWVvbmUgd2hvIGhhcywgd2UgdXJnZSB5b3UgdG8gY29udGFj
dCB0aGUgVW5pdmVyc2l0eeKAmXMgb2ZmaWNlIG9mIEVxdWFsIE9wcG9ydHVuaXR5IGFu
ZCBDb21wbGlhbmNlIG9yIHJlcG9ydCBpdCBvbmxpbmUuIEZvciBtb3JlIGluZm9ybWF0
aW9uIGFib3V0IG91ciBwb2xpY2llcywgcHJvZ3JhbXMgYW5kIHJlc291cmNlcywgcGxl
YXNlIHZpc2l0IFNhZmUgYXQgVU5DLg0KDQpXZSB3b3VsZCBsaWtlIHRvIHRoYW5rIHRo
ZSBodW5kcmVkcyBvZiBwZW9wbGUgb24gb3VyIGNhbXB1cyB3aG8gd29yayBldmVyeSBk
YXkgdG8gc3RyZW5ndGhlbiBvdXIgY3VsdHVyZSBhbmQgaGVscCBlbnN1cmUgdGhhdCBh
bGwgb2YgdXMgZmVlbCBzYWZlIHRvIHRlYWNoLCBsZWFybiBhbmQgY2Fycnkgb3V0IHRo
ZSBpbXBvcnRhbnQgd29yayB3ZSBhcmUgaGVyZSB0byBkby4gT3VyIFVuaXZlcnNpdHkg
aXMgYXQgaXRzIHZlcnkgYmVzdCB3aGVuIHdlIHRyZWF0IG9uZSBhbm90aGVyIHdpdGgg
cmVzcGVjdCBhbmQgdXBob2xkIHRoZSB2YWx1ZXMgd2Ugc2hhcmUgYXMgYSBjb21tdW5p
dHkuIFdlIHNob3VsZCBhbGwgZXhwZWN0IGFuZCB0b2xlcmF0ZSBub3RoaW5nIGxlc3Mu
DQoNClNpbmNlcmVseSwNCg0KQ2Fyb2wgTC4gRm9sdA0KQ2hhbmNlbGxvcg0KDQpSb2Jl
cnQgQS4gQmxvdWluDQpFeGVjdXRpdmUgVmljZSBDaGFuY2VsbG9yIGFuZCBQcm92b3N0
DQoNCkZlbGljaWEgQS4gV2FzaGluZ3Rvbg0KVmljZSBDaGFuY2VsbG9yIGZvciBXb3Jr
Zm9yY2UgU3RyYXRlZ3ksIEVxdWl0eSBhbmQgRW5nYWdlbWVudA0KDQrCoA0KDQpUaGlz
IG1lc3NhZ2UgaXMgc3BvbnNvcmVkIGJ5OiBPZmZpY2Ugb2YgdGhlIENoYW5jZWxsb3I=