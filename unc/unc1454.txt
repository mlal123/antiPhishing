U3R1ZGVudHMsDQoNClRoZSBTcHJpbmcgR2VuZXJhbCBFbGVjdGlvbnMgd2lsbCBiZSBo
ZWxkIG9uIFR1ZXNkYXksIEZlYnJ1YXJ5IDl0aCwgZnJvbSAxMkFNIC0gOCBQTSBvbiBT
dHVkZW50TGlmZSAoaHR0cHM6Ly9zdHVkZW50bGlmZS51bmMuZWR1KS4gUGxlYXNlIHJl
bWVtYmVyIHRvIGxvZyBvbiBhbmQgdm90ZSBmb3IgeW91ciByZXByZXNlbnRhdGl2ZXMg
Zm9yIG5leHQgeWVhciEgQXMgYSByZW1pbmRlciwgaGVyZSBhcmUgdGhlIHNlYXRzIHVw
IGZvciBlbGVjdGlvbjoNCg0KDQpUaGUgUHJlc2lkZW50IG9mIHRoZSBTdHVkZW50IEJv
ZHkgKFNCUCkgDQpUaGUgUHJlc2lkZW50IG9mIHRoZSBDYXJvbGluYSBBdGhsZXRpYyBB
c3NvY2lhdGlvbiAoQ0FBKQ0KVGhlIFByZXNpZGVudCBvZiB0aGUgR3JhZHVhdGUgYW5k
IFByb2Zlc3Npb25hbCBTdHVkZW50IEZlZGVyYXRpb24gKEdQU0YpDQpUaGUgUHJlc2lk
ZW50IG9mIHRoZSBSZXNpZGVuY2UgSGFsbCBBc3NvY2lhdGlvbiAoUkhBKQ0KUHJlc2lk
ZW50IGFuZCBWaWNlIFByZXNpZGVudCBvZiB0aGUgUmlzaW5nIFNlbmlvciBDbGFzcyAo
U2VuaW9yIENsYXNzIE9mZmljZXJzKQ0KDQpTdHVkZW50IENvbmdyZXNzOg0KDQpEaXN0
cmljdCAxIChOb3J0aCBDYW1wdXMpDQpEaXN0cmljdCAyIChNaWQgQ2FtcHVzKQ0KRGlz
dHJpY3QgMyAoU291dGggQ2FtcHVzLVdlc3QpDQpEaXN0cmljdCA0IChTb3V0aCBDYW1w
dXMtRWFzdCkNCkRpc3RyaWN0IDUgKEdyYW52aWxsZSBUb3dlcnMpDQpEaXN0cmljdCA2
IChHcmVlayBIb3VzaW5nKQ0KRGlzdHJpY3QgNyAoT2ZmLUNhbXB1cykNCkRpc3RyaWN0
IDggKFJhbXMgJiBPZHVtIFZpbGxhZ2UpDQpEaXN0cmljdCA5IChHUFNGLSBCdXNpL0dv
did0L0luZm8gYW5kIExpYiBTY2llbmNlL0pvdXJuYWxpc20vQ29tbS9MYXcpIA0KRGlz
dHJpY3QgMTAgKEdQU0YtIERlbnQvTWVkL051cnMvUGhhcm0vUHViIEhlYWx0aC9Tb2Mg
V29yaykgDQpEaXN0cmljdCAxMSAoR1BTRi0gQSZTL0VkdWNhdGlvbikNCg0KWW91IGNh
biBmaW5kIHRoZSBwcm9maWxlcyBvZiBjYW5kaWRhdGVzIHJ1bm5pbmcgZm9yIHRoZXNl
IG9mZmljZXMgYXQ6wqBodHRwOi8vZWxlY3Rpb25zLnVuYy5lZHUvcHJvZmlsZXMvDQoN
ClJlZmVyZW5kdW1zOg0KDQoyIHJlZmVyZW5kdW1zIHdpbGwgYmUgdXAgb24gdGhlIGJh
bGxvdCB0byBjaGFuZ2UgdGhlIFN0dWRlbnQgQ29uc3RpdHV0aW9uLg0KDQoNCklmIHlv
dSBoYXZlIGFueSBxdWVzdGlvbnMgb3IgY29uY2VybnMgYWJvdXQgdGhlIHVwY29taW5n
IGVsZWN0aW9uLCBwbGVhc2UgY29udGFjdCB1cyBhdCBib2VAdW5jLmVkdS4NCg0KQmVz
dCwNClVOQyBCb2FyZCBvZiBFbGVjdGlvbnMNCg0KVGhpcyBtZXNzYWdlIGlzIHNwb25z
b3JlZCBieTogQm9hcmQgb2YgRWxlY3Rpb25z