DQpEZWFyIFN0dWRlbnRzLCBGYWN1bHR5IGFuZCBTdGFmZjoNCg0KRWFjaCB5ZWFyLCBo
dW5kcmVkcyBvZiBwZW9wbGUgaW4gdGhlIENhcm9saW5hIGNvbW11bml0eSB0cmF2ZWwg
aW50ZXJuYXRpb25hbGx5IGZvciBpbXBvcnRhbnQgYWNhZGVtaWMsIHJlc2VhcmNoIGFu
ZCBvdXRyZWFjaCBvcHBvcnR1bml0aWVzLiBXZSBhbHNvIHRyYXZlbCBhYnJvYWQgZm9y
IHBlcnNvbmFsIHJlYXNvbnMuIEluIGFsbCBjYXNlcywgd2Ugd291bGQgbGlrZSB0byBy
ZW1pbmQgeW91IG9mIFVuaXZlcnNpdHkgcmVxdWlyZW1lbnRzIGFuZCByZXNvdXJjZXMg
dGhhdCBjYW4gaGVscCBpbmZvcm0geW91ciBwbGFucyBmb3Igc2FmZSBhbmQgcHJvZHVj
dGl2ZSBpbnRlcm5hdGlvbmFsIHRyYXZlbC4NCg0KVU5DIEdsb2JhbCBUcmF2ZWwgUmVn
aXN0cnnCoA0KKGh0dHA6Ly9nbG9iYWx0cmF2ZWwudW5jLmVkdSkNCg0KQW55b25lIHRy
YXZlbGluZyBpbnRlcm5hdGlvbmFsbHkgaW4gYWZmaWxpYXRpb24gd2l0aCB0aGUgVW5p
dmVyc2l0eSBtdXN0IHJlZ2lzdGVyIHRoZSB0cmlwIGluIHRoZSBVbml2ZXJzaXR5J3Mg
R2xvYmFsIFRyYXZlbCBSZWdpc3RyeS4gVGhlIEdsb2JhbCBUcmF2ZWwgUmVnaXN0cnkg
aXMgYSBzZWN1cmUgZGF0YWJhc2Ugd2l0aCBpdGluZXJhcmllcyBhbmQgY29udGFjdCBp
bmZvcm1hdGlvbiBmb3Igc3R1ZGVudHMsIGZhY3VsdHksIGFuZCBzdGFmZiB0cmF2ZWxp
bmcgYWJyb2FkLiBUaGUgaW5mb3JtYXRpb24gaW4gdGhpcyBkYXRhYmFzZSBhc3Npc3Rz
IHVzIGluIHJlYWNoaW5nIHRyYXZlbGVycyBpbiBjYXNlIG9mIHVyZ2VudCBoZWFsdGgg
b3Igc2FmZXR5IGNvbmNlcm5zLiBTdHVkZW50cyBlbnJvbGxlZCBpbiB0cmF2ZWwgcHJv
Z3JhbXMgdGhyb3VnaCB0aGUgT2ZmaWNlIG9mIFN0dWR5IEFicm9hZCB3ZWJzaXRlIG9y
IHRocm91Z2ggdGhlaXIgcHJvZmVzc2lvbmFsIHNjaG9vbCBhZG1pbmlzdHJhdG9yIGFy
ZSBhdXRvbWF0aWNhbGx5IGVucm9sbGVkIGluIHRoZSByZWdpc3RyeS4gRm9yIG1vcmUg
aW5mb3JtYXRpb24sIHBsZWFzZSBzZWUgaHR0cHM6Ly9nbG9iYWwudW5jLmVkdS90cmF2
ZWwtaW5mby9nbG9iYWwtdHJhdmVsLXJlZ2lzdHJ5IG9yIGNvbnRhY3QgQW5kcmV3IEh1
bnQgaW4gdGhlIE9mZmljZSBvZiB0aGUgRXhlY3V0aXZlIFZpY2UgQ2hhbmNlbGxvciBh
bmQgUHJvdm9zdCBhdCA5MTkuOTYyLjM2MjIgb3LCoGFuZHJldy5odW50QHVuYy5lZHUu
DQoNCkluc3VyYW5jZSBDb3ZlcmFnZSBBYnJvYWTCoA0KaHR0cDovL2dsb2JhbC51bmMu
ZWR1L3RyYXZlbC1pbmZvL3RyYXZlbC1pbnN1cmFuY2UtYW5kLXJpc2stbWFuYWdlbWVu
dA0KDQpBbnlvbmUgdHJhdmVsaW5nIGludGVybmF0aW9uYWxseSBpbiBhZmZpbGlhdGlv
biB3aXRoIHRoZSBVbml2ZXJzaXR5IG11c3QgYWxzbyBlbnJvbGwgaW4gdGhlIGludGVy
bmF0aW9uYWwgaGVhbHRoLCBldmFjdWF0aW9uLCBhbmQgcmVwYXRyaWF0aW9uIGluc3Vy
YW5jZSBwcm9ncmFtIGVzdGFibGlzaGVkIGJ5IEdlbmVyYWwgQWRtaW5pc3RyYXRpb24g
YW5kIGFkbWluaXN0ZXJlZCBieSBHZW9CbHVlLiBUbyBlbnJvbGwsIHBsZWFzZSBjb250
YWN0IEphbmV0IEhvZXJua2UgaW4gUmlzayBNYW5hZ2VtZW50IFNlcnZpY2VzIGF0IDkx
OS45NjIuNjY4MSBvcsKgamFuZXRfaG9lcm5rZUB1bmMuZWR1LiBTdHVkZW50cyBwYXJ0
aWNpcGF0aW5nIGluIHByb2dyYW1zIHRocm91Z2ggdGhlIE9mZmljZSBvZiBTdHVkeSBB
YnJvYWQgd2Vic2l0ZSBvciB0aHJvdWdoIHRoZWlyIHByb2Zlc3Npb25hbCBzY2hvb2wg
YWRtaW5pc3RyYXRvciBhcmUgcHJlLWVucm9sbGVkIGZvciBjb3ZlcmFnZS4gRm9yIG90
aGVyIHRyYXZlbCBub3QgYWZmaWxpYXRlZCB3aXRoIFVOQywgd2UgZW5jb3VyYWdlIHlv
dSB0byByZXZpZXcgeW91ciBpbnN1cmFuY2UgY292ZXJhZ2UgYmVmb3JlIHRyYXZlbGlu
ZyBhbmQsIGlmIG5lY2Vzc2FyeSwgY29uc2lkZXIgcHVyY2hhc2luZyBhIHN1cHBsZW1l
bnRhbCBwb2xpY3kgdG8gY292ZXIgeW91IHdoaWxlIGFicm9hZC4NCg0KVHJhdmVsIFdh
cm5pbmdzIGFuZCBBbGVydHPCoA0KKGh0dHA6Ly9nbG9iYWwudW5jLmVkdS90cmF2ZWwt
aW5mby9zdGF0ZS1kZXBhcnRtZW50LXRyYXZlbC13YXJuaW5ncykNCg0KVGhlIFVuaXZl
cnNpdHkgbW9uaXRvcnMgdHJhdmVsIHdhcm5pbmdzIGFuZCBhbGVydHMgZnJvbSB0aGUg
VS5TLiBTdGF0ZSBEZXBhcnRtZW50IGFuZCB0aGUgVS5TLiBDZW50ZXJzIGZvciBEaXNl
YXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24gYW5kIGNhdGVnb3JpemVzIGNvdW50cmll
c+KAmSB0cmF2ZWwgcmlzayBsZXZlbHMgYWNjb3JkaW5nbHkuIFRyYXZlbCB0byBjb3Vu
dHJpZXMgd2l0aCBlbGV2YXRlZCByaXNrIGxldmVsc8KgY2FyaWVzwqBjZXJ0YWluIGlt
cGxpY2F0aW9ucyBmb3IgdW5pdmVyc2l0eS1yZWxhdGVkIHRyYXZlbC7CoENsaWNrIHRo
ZSBsaW5rIGFib3ZlIGZvcsKgYSBsaXN0IG9mIGNvdW50cmllcyB3aXRoIGVsZXZhdGVk
IHRyYXZlbCByaXNrcyBhcyB3ZWxsIGFzIGluZm9ybWF0aW9uIG9uIGFkZGl0aW9uYWwg
cmVxdWlyZW1lbnRzIGZvciB0cmF2ZWxpbmcgdG8gdGhlc2UgbmF0aW9ucy4NCg0KwqBG
b3IgYWRkaXRpb25hbCB0cmF2ZWwgaW5mb3JtYXRpb24sIHJlc291cmNlcywgYW5kIHRp
cHMgdmlzaXQ6wqBodHRwOi8vZ2xvYmFsLnVuYy5lZHUvdHJhdmVsLWluZm8uDQoNClRo
aXMgbWVzc2FnZSBpcyBzcG9uc29yZWQgYnk6IE9mZmljZSBvZiB0aGUgRXhlY3V0aXZl
IFZpY2UgQ2hhbmNlbGxvciBhbmQgUHJvdm9zdA==