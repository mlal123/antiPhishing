DQpbY2lkOjNFMDZDN0I3LTM1QzQtNDAxRS1CNkQ0LTNBQjgxQUZGMEU4Rl0NCg0KRGVhciBTdHVk
ZW50cywNCg0KRE8gTk9UIG1haWwgcGFja2FnZXMgYW5kIGxldHRlcnMgdG8geW91ciBjYW1wdXMg
YWRkcmVzcyBkdXJpbmcgdGhlIFdpbnRlciBCcmVhay4NCg0KUGxlYXNlIGRvIG5vdCBoYXZlIHBh
Y2thZ2VzIG1haWxlZCB0byB5b3VyIGNhbXB1cyBhZGRyZXNzIHRvIGFycml2ZSBiZWZvcmUgRnJp
ZGF5LCBKYW51YXJ5IDgsIDIwMTYuIExldHRlciBtYWlsIHdpbGwgYmUgc3VzcGVuZGVkIGZvciB0
aGUgcmVzaWRlbmNlIGhhbGxzIGR1cmluZyB0aGUgYnJlYWsgZnJvbSBTYXR1cmRheSwgRGVjZW1i
ZXIgMTIsIDIwMTUgdW50aWwgTW9uZGF5LCBKYW51YXJ5IDExLCAyMDE2LiBMZXR0ZXIgbWFpbCBz
ZXJ2aWNlIHdpbGwgcmVzdW1lIG9uIE1vbmRheSwgSmFudWFyeSAxMSwgMjAxNi4gVGhlIFBhY2th
Z2UgQ2VudGVycyB3aWxsIHJlc3VtZSByZWd1bGFyIGhvdXJzIGJlZ2lubmluZyBNb25kYXksIEph
bnVhcnkgMTEsIDIwMTYuIFJlZ3VsYXIgaG91cnMgYXJlIE1vbmRheS1GcmlkYXkgMTBhbS02OjMw
cG0gYW5kIFNhdHVyZGF5IDExYW0tNHBtLg0KDQpUaGFuayB5b3UgYW5kIHBsZWFzZSBjYWxsIHVz
IGlmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMhDQoNCkRlcGFydG1lbnQgb2YgSG91c2luZyAmIFJl
c2lkZW50aWFsIEVkdWNhdGlvbg0KVGhlIFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEgYXQg
Q2hhcGVsIEhpbGwNCjEyMTMgU0FTQiBOIHwgNDUwIFJpZGdlIFJvYWQsIENoYXBlbCBIaWxsLCBO
QyAyNzU5OS01NTAwDQpUOiA5MTkuOTYyLjU0MDEgfCBFOiBob3VzaW5nQHVuYy5lZHU8bWFpbHRv
OmhvdXNpbmdAdW5jLmVkdT4gfCBXOiBob3VzaW5nLnVuYy5lZHU8aHR0cDovL2hvdXNpbmcudW5j
LmVkdT4NClRhbGsgdG8gSG91c2luZyEgRmFjZWJvb2s8aHR0cHM6Ly93d3cuZmFjZWJvb2suY29t
L3VuY2hvdXNpbmc+IHwgVHdpdHRlcjxodHRwczovL3R3aXR0ZXIuY29tL3VuY2hvdXNpbmc+IHwg
SW5zdGFncmFtPGh0dHBzOi8vaW5zdGFncmFtLmNvbS91bmNob3VzaW5nLz4gfCBZb3VUdWJlPGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvdW5jaG91c2luZzE+IHwgUGludGVyZXN0PGh0dHA6
Ly9yZXNsaWZlLndlYi51bmMuZWR1Lz4gfCBTY29vcC5pdDxodHRwOi8vd3d3LnNjb29wLml0L3Qv
dW5jaG91c2luZz4gfCBSZXMgTGlmZSBCbG9nPGh0dHA6Ly9yZXNsaWZlLndlYi51bmMuZWR1Lz4N
CltjaWQ6QzQ0MkMyNzMtMERGNC00QTU2LUIyMjktMTBBQ0JDMkREOEUyXQ0KDQo=
