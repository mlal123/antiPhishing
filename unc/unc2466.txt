U2VwdGVtYmVyIDEsIDIwMTYNCg0KwqBUTzrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoCBGYWN1bHR5LCBTdGFmZiBhbmQgU3R1ZGVudHMNCg0K
wqBGUk9NOsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgRHIuIEFkYW0g
UGVyc2t5DQoNCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgVW5pdmVyc2l0eSBUZWFjaGluZyBBd2FyZHMgQ29tbWl0
dGVlIENoYWlyDQoNClNVQkpFQ1Q6wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIE5vbWlu
YXRlIGFuIE91dHN0YW5kaW5nIFRlYWNoZXIsIE1lbnRvciwgb3IgVEEhIQ0KDQrCoA0K
DQpEbyB5b3Uga25vdyBvZiBhbiBvdXRzdGFuZGluZyB0ZWFjaGVyLCBtZW50b3IsIG9y
IHRlYWNoaW5nIGFzc2lzdGFudD8gU29tZW9uZSB3aG8gaGFzIGluc3BpcmVkIHlvdSBh
dCBDYXJvbGluYT/CoCBXaG8gaGFzIGhlbHBlZCB5b3UgbGVhcm4sIGdyb3csIGFuZCBi
ZWNvbWUgZXhjaXRlZCBhYm91dCB5b3VyIGVkdWNhdGlvbj/CoCBXaG8gaXMgYW4gb3V0
c3RhbmRpbmcgZWR1Y2F0b3IgdGhhdCBkZXNlcnZlcyByZWNvZ25pdGlvbj/CoA0KDQpO
b21pbmF0ZSBhIGZhY3VsdHkgbWVtYmVyLCBzdGFmZiwgb3IgZ3JhZHVhdGUgc3R1ZGVu
dCBmb3IgYW4gYXdhcmQhDQoNCkVhY2ggeWVhciwgVU5DIGZvcm1hbGx5IGFja25vd2xl
ZGdlcyB0aGUgY2VudHJhbCByb2xlIG9mIHRlYWNoaW5nIGFuZCBtZW50b3JpbmcgYnkg
cmVjb2duaXppbmcgZmFjdWx0eSwgc3RhZmYgYW5kIHN0dWRlbnRzLiBUaGUgVW5pdmVy
c2l0eSBDb21taXR0ZWUgb24gVGVhY2hpbmcgQXdhcmRzIG9mZmVycyBudW1lcm91cyBh
d2FyZHMgYmFzZWQgb24gbm9taW5hdGlvbnMgYnkgbWVtYmVycyBvZiBvdXIgdW5pdmVy
c2l0eSBjb21tdW5pdHkuwqANCg0KUGxlYXNlIHRha2UgYSBtb21lbnQgdG8gdGhpbmsg
b2YgdGhvc2Ugd2hvIGFyZSBkZXNlcnZpbmcgb2YgdGhlc2UgYXdhcmRzIGFuZCBub21p
bmF0ZSB0aGVtIHZpYSB0aGUNCg0Kd2Vic2l0ZTrCoA0KDQrCoGh0dHA6Ly9wcm92b3N0
LnVuYy5lZHUvdGVhY2hpbmctYXdhcmRzDQoNCsKgUGxlYXNlIHN1Ym1pdCBhbGwgbm9t
aW5hdGlvbnMgb25saW5lLg0KDQrCoE5vIGluZGl2aWR1YWwgbWF5IHJlY2VpdmUgbW9y
ZSB0aGFuIG9uZSBhd2FyZC4NCg0KwqBZb3VyIG5vbWluYXRpb24gbXVzdCBpbmNsdWRl
IGEgbGV0dGVyIHRlbGxpbmcgdXMgd2h5IHRoaXMgdGVhY2hlciBkZXNlcnZlcyB0aGlz
IGF3YXJkLg0KDQrCoFN0cm9uZyBsZXR0ZXJzIGluY2x1ZGUgc3BlY2lmaWMgZXhhbXBs
ZXMgdGhhdCBzdXBwb3J0IHRoZSBwcm9mZXNzb3IncyBleGNlbGxlbmNlIGluIHRlYWNo
aW5nIGFuZCBtZW50b3JpbmcuIFN0cm9uZyBsZXR0ZXJzIHNob3VsZCByZWZsZWN0IGEg
Y3JlYXRpb24gb2YgYSBwb3NpdGl2ZSBhbmQgaW5jbHVzaXZlIGxlYXJuaW5nIGVudmly
b25tZW50LCBlc3RhYmxpc2hpbmcgaGlnaCBidXQgYWNoaWV2YWJsZSBleHBlY3RhdGlv
bnMswqAgZmFjaWxpdGF0aW9uIG9mIGxlYXJuaW5nLCBhbmQgY29tbWl0bWVudCB0byBs
ZWFybmVyLiBJZiBvbmx5IGEgbmFtZSBpcyBzdWJtaXR0ZWQgaXQgaXMgaW52YWxpZCBh
bmQgY2Fubm90IGJlIGNvbnNpZGVyZWQuDQoNCsKgWW91IG1heSBhZGRyZXNzIHF1ZXN0
aW9ucyB0byB0aGUgY2hhaXIg4oCTIEFkYW0gUGVyc2t5IGFwZXJza3lAdW5jLmVkdSBv
ciBEZWJiaWUgRGVlc2UgaW4gdGhlIE9mZmljZSBvZiB0aGUgUHJvdm9zdDrCoCBkZWJi
aWVfZGVlc2VAdW5jLmVkdQ0KDQpUaGUgZGVhZGxpbmUgZm9yIHN1Ym1pdHRpbmcgbm9t
aW5hdGlvbnMgaXMgT2N0b2JlciAxLg0KDQpUaGUgY29tbWl0dGVlIHdpbGwgcmV2aWV3
IHRoZSBub21pbmVlcywgY29sbGVjdCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFib3V0
IHRoZWlyIHRlYWNoaW5nIGFuZCByZWNvbW1lbmQgd2lubmVycyB0byB0aGUgQ2hhbmNl
bGxvci4gVGhpcyB5ZWFyLCB3ZSB3aWxsIHNlbGVjdCByZWNpcGllbnRzIGZvciBzaXgg
dHlwZXMgb2YgYXdhcmRzOg0KDQrCoEJvYXJkIG9mIEdvdmVybm9ycyBBd2FyZCBmb3Ig
RXhjZWxsZW5jZSBpbiBUZWFjaGluZzogVGhpcyBhd2FyZCBpcyBnaXZlbiBieSB0aGUg
Qm9hcmQgb2YgR292ZXJub3JzIHRvIGEgdGVudXJlZCBmYWN1bHR5IG1lbWJlciBvbiBl
YWNoIFVOQyBjYW1wdXMgZm9yIGV4Y2VsbGVudCBhbmQgZXhjZXB0aW9uYWwgdGVhY2hp
bmcgYXQgdGhlIHVuZGVyZ3JhZHVhdGUgbGV2ZWwgb3ZlciBhIHN1c3RhaW5lZCBwZXJp
b2Qgb2YgdGltZS7CoA0KRGlzdGluZ3Vpc2hlZCBUZWFjaGluZyBBd2FyZHMgZm9yIFBv
c3QtQmFjY2FsYXVyZWF0ZSBJbnN0cnVjdGlvbjogRm91ciBhd2FyZHMgYXJlIGdpdmVu
IHRvIGZhY3VsdHkgbWVtYmVycyBmb3IgZXhjZXB0aW9uYWwgdGVhY2hpbmcgb2YgcG9z
dC1iYWNjYWxhdXJlYXRlIHN0dWRlbnRzLg0KQXdhcmRzIHRvIEZhY3VsdHkgZm9yIEV4
Y2VsbGVuY2UgaW4gVW5kZXJncmFkdWF0ZSBUZWFjaGluZzrCoCBGaXZlIFRhbm5lciBB
d2FyZHMsIE9uZSBGcmlkYXkgQXdhcmQsIGFuZCBUd28gU2l0dGVyc29uIEF3YXJkcyBh
cmUgZ2l2ZW4gdG8gZnVsbC10aW1lIGZhY3VsdHkgbWVtYmVycy4NClRhbm5lciBBd2Fy
ZHMgdG8gR3JhZHVhdGUgVGVhY2hpbmcgQXNzaXN0YW50czogRml2ZSBUYW5uZXIgQXdh
cmRzIGFyZSBnaXZlbiB0byBncmFkdWF0ZSB0ZWFjaGluZyBhc3Npc3RhbnRzIGZvciBl
eGNlbGxlbmNlIGluIHVuZGVyZ3JhZHVhdGUgdGVhY2hpbmcuDQpDaGFwbWFuIEZhbWls
eSBUZWFjaGluZyBBd2FyZHMgOlRocmVlIENoYXBtYW4gRmFtaWx5IEF3YXJkcyBhcmUg
Z2l2ZW4gdG8gZnVsbC10aW1lIGZhY3VsdHkgbWVtYmVycyBmb3IgZXhjZWxsZW5jZSBp
biB1bmRlcmdyYWR1YXRlIHRlYWNoaW5nLg0KTWVudG9yIEF3YXJkIGZvciBMaWZldGlt
ZSBBY2hpZXZlbWVudDogVGhpcyBhd2FyZCBhY2tub3dsZWRnZXMgbGlmZXRpbWUgY29u
dHJpYnV0aW9ucyB0byB0ZWFjaGluZywgbGVhcm5pbmcgYW5kIG1lbnRvcmluZyBiZXlv
bmQgdGhlIGNsYXNzcm9vbSBhbmQgaXMgbm90IGxpbWl0ZWQgdG8gdHJhZGl0aW9uYWwg
ZmFjdWx0eS4gSWYgeW91IG5vbWluYXRlIHNvbWVvbmUgZm9yIHRoaXMgYXdhcmQsIHBs
ZWFzZSBmb2N1cyBvbiBoaXMgb3IgaGVyIGxvbmctdGVybSBpbXBhY3Qgb24gc3R1ZGVu
dHMuDQoNCsKgVGhhbmsgeW91IGZvciB5b3VyIGhlbHAgaW4gcmV3YXJkaW5nIGV4Y2Vs
bGVudCB0ZWFjaGluZyBhdCBDYXJvbGluYSENCg0KVGhpcyBtZXNzYWdlIGlzIHNwb25z
b3JlZCBieTogT2ZmaWNlIG9mIHRoZSBFeGVjdXRpdmUgVmljZSBDaGFuY2VsbG9yIGFu
ZCBQcm92b3N0