DQrCoEhlbHAgQ2Fyb2xpbmEgY2VsZWJyYXRlIHRocmVlIGRlY2FkZXMgb2Ygc2F2aW5n
IGxpdmVzISBTaG93IHlvdSBibGVlZCBDYXJvbGluYSBibHVlIGJ5IGRvbmF0aW5nIGJs
b29kIGF0IHRoZcKgMzB0aMKgYW5udWFsIENhcm9saW5hIEJsb29kIERyaXZlIDcgYS5t
LiAtIDYgcC5tLiBKdW5lIDUgYXQgdGhlIERlYW4gRS4gU21pdGggQ2VudGVywqBhcyB3
ZSBzdHJpdmUgdG8gcmVhY2ggYSBnb2FsIG9mIDEsMTAwIHVuaXRzIG9mIGxpZmVzYXZp
bmcgYmxvb2QuDQoNClByZXNlbnRpbmcgZG9ub3JzIHdpbGwgcmVjZWl2ZSBhIGNvbW1l
bW9yYXRpdmUgQ2Fyb2xpbmEgQmxvb2QgRHJpdmUgVC1zaGlydCBhbmQgZnJlZSBmb29k
LiBUaGVyZSB3aWxsIGJlIHBsZW50eSBvZiBmcmVlIHBhcmtpbmcgYXQgdGhlIFNtaXRo
IENlbnRlciwgb3IgcmlkZSB3aXRoIENoYXBlbCBIaWxsIFRyYW5zaXQuIEZvciBVTkMt
Q2hhcGVsIEhpbGwgZW1wbG95ZWVzLCB0aW1lIHNwZW50IGRvbmF0aW5nIGlzIGNvbnNp
ZGVyZWQgd29yayB0aW1lLCB3aXRoIHBlcm1pc3Npb24gZnJvbSBhIHN1cGVydmlzb3Iu
DQoNClRvIHNhdmUgdXAgdG8gMTUgbWludXRlcyBvZmYgZG9uYXRpb24gdGltZSBnaXZp
bmcgYmxvb2QsIHVzZcKgUmFwaWRQYXNzLiBEb25vcnMgY29tcGxldGUgdGhlIHByZS1k
b25hdGlvbiByZWFkaW5nIGFuZCBoZWFsdGggaGlzdG9yeSBxdWVzdGlvbm5haXJlIG9u
bGluZSwgb24gdGhlIGRheSBvZiBkb25hdGlvbiwgZnJvbSBhIG1vYmlsZSBkZXZpY2Ug
b3IgY29tcHV0ZXIuIEFmdGVyIGNvbXBsZXRpbmcgdGhlIFJhcGlkUGFzcyBvbmxpbmUs
IGRvbm9ycyBjYW4gZWl0aGVyIHByaW50IHRoZSBwYXNzIG9yIHNlbmQgaXQgdG8gdGhl
aXIgc21hcnRwaG9uZSB0byBicmluZyB0byB0aGUgYmxvb2QgZHJpdmUuDQoNClNjaGVk
dWxlIHlvdXIgYXBwb2ludG1lbnQgdG9kYXkhIFZpc2l0wqBSZWRDcm9zc0Jsb29kLm9y
ZywgY2FsbCAxLTgwMC1SRUQgQ1JPU1MgKDEtODAwLTczMy0yNzY3KSBvciB1c2UgdGhl
wqBCbG9vZCBEb25vciBBcHDCoGFuZCBlbnRlciBzcG9uc29yIGNvZGUgVU5DLiBXYWxr
LWlucyB3aWxsIGJlIGFjY2VwdGVkIHRoZSBkYXkgb2YgdGhlIGRyaXZlLCBidXQgYXBw
b2ludG1lbnRzIGFyZSBlbmNvdXJhZ2VkLg0KDQpGb3IgYWRkaXRpb25hbCBkZXRhaWxz
IG9yIHRvIHZvbHVudGVlciwgdmlzaXTCoHVuYy5lZHUvYmxvb2QuDQoNCllvdXIgZ2Vu
ZXJvdXMgZG9uYXRpb24gYW5kIHRpbWUgdm9sdW50ZWVyaW5nIG1ha2VzIGFsbCB0aGUg
ZGlmZmVyZW5jZS4NCg0KVGhpcyBtZXNzYWdlIGlzIHNwb25zb3JlZCBieTogRW1wbG95
ZWUgRm9ydW0=