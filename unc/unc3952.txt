DQpEZWFyIENhbXB1cyBDb21tdW5pdHk6DQoNCkkgYW0gcGxlYXNlZCB0byBhbm5vdW5j
ZSB0aGF0IENsYXl0b24gU29tZXJzIGhhcyBiZWVuIG5hbWVkIHZpY2UgY2hhbmNlbGxv
ciBvZiBwdWJsaWMgYWZmYWlycyBhbmQgc2VjcmV0YXJ5IG9mIHRoZSBVbml2ZXJzaXR5
LiBUaGUgYXBwb2ludG1lbnQsIGVmZmVjdGl2ZSB0b2RheSwgd2FzIGFwcHJvdmVkIGJ5
IHRoZSBVbml2ZXJzaXR54oCZcyBCb2FyZCBvZiBUcnVzdGVlcy4gVGhlIHBvc2l0aW9u
IHdhcyBhcHByb3ZlZCBieSB0aGUgVU5DIEJvYXJkIG9mIEdvdmVybm9ycy4NCg0KTXIu
IFNvbWVycyBpcyBhIGxvbmd0aW1lIE5vcnRoIENhcm9saW5hIGF0dG9ybmV5LCBleGVj
dXRpdmUgbGVhZGVyIGFuZCBzdGF0ZSBnb3Zlcm5tZW50IG9mZmljaWFsLiBNb3N0IHJl
Y2VudGx5LCBoZSBzZXJ2ZWQgYXMgY2hpZWYgb2Ygc3RhZmYgdG8gdGhlIE5vcnRoIENh
cm9saW5hIFNwZWFrZXIgb2YgdGhlIEhvdXNlLCBwcm92aWRpbmcgY291bnNlbCBvbiBs
ZWdpc2xhdGl2ZSBhbmQgbGVnYWwgaXNzdWVzIHRvIG1lbWJlcnMgb2YgdGhlIEhvdXNl
IG9mIFJlcHJlc2VudGF0aXZlcyBpbiB0aGUgR2VuZXJhbCBBc3NlbWJseS4gSGUgYnJp
bmdzIGEgd2VhbHRoIG9mIHB1YmxpYyBwb2xpY3ksIGdvdmVybm1lbnQsIGV4ZWN1dGl2
ZSBib2FyZCByZWxhdGlvbnMgYW5kIGxlZ2FsIGV4cGVyaWVuY2Ugb24gY29tcGxleCBn
b3Zlcm5hbmNlIGFuZCBjb21wbGlhbmNlIGlzc3VlcyB0byB0aGUgVW5pdmVyc2l0eS4N
Cg0KVGhpcyBuZXcgcG9zaXRpb24gZW5hYmxlcyBVTkMtQ2hhcGVsIEhpbGwgdG8gaW5j
cmVhc2Ugb3VyIGZvY3VzIG9uIHN0YXRlIGFuZCBmZWRlcmFsIHJlbGF0aW9ucyBpc3N1
ZXMuIE1yLiBTb21lcnMgd2lsbCBwYXJ0bmVyIHdpdGggUHJlc2lkZW50IE1hcmdhcmV0
IFNwZWxsaW5nc+KAmSBzdGFmZiBhdCBHZW5lcmFsIEFkbWluaXN0cmF0aW9uIHRvIGFk
dm9jYXRlIGZvciB0aGUgVU5DIHN5c3RlbeKAmXMgc3RhdGUgYW5kIGZlZGVyYWwgaW5p
dGlhdGl2ZXMsIG1vbml0b3IgcHJvcG9zZWQgbGVnaXNsYXRpb24gYW5kIHB1YmxpYyBw
b2xpY3kgaXNzdWVzLCBjb29yZGluYXRlIFVOQy1DaGFwZWwgSGlsbOKAmXMgcmVsYXRp
b25zaGlwcyB3aXRoIHN0YXRlIGFuZCBmZWRlcmFsIGFnZW5jaWVzLCBhbmQgc3RyZW5n
dGhlbiBjYW1wdXMgY29udHJpYnV0aW9ucyB0byBzdGF0ZSBhbmQgbmF0aW9uYWwgY29t
bWl0dGVlcywgYWR2aXNvcnkgcGFuZWxzIGFuZCBwb2xpY3kgYm9hcmRzLiBBcyBzZWNy
ZXRhcnkgb2YgdGhlIFVuaXZlcnNpdHksIE1yLiBTb21lcnMgYWxzbyB3aWxsIGhhdmUg
cHJpbWFyeSByZXNwb25zaWJpbGl0eSBmb3Igc3VwcG9ydGluZyB0aGUgQm9hcmQgb2Yg
VHJ1c3RlZXMgdGhyb3VnaCBzdHJhdGVnaWMgcGxhbm5pbmcgYW5kIG1hbmFnZW1lbnQu
DQoNCk1yLiBTb21lcnPigJkgcHJldmlvdXMgZXhwZXJpZW5jZSBpbmNsdWRlcyBsZWFk
aW5nIHRoZSBOLkMuIFR1cm5waWtlIEF1dGhvcml0eSwgYWR2aXNpbmcgdGhlIE4uQy4g
SGlnaCBTY2hvb2wgQXRobGV0aWMgQXNzb2NpYXRpb24gYXMgZ2VuZXJhbCBjb3Vuc2Vs
LCBhbmQgc2VydmluZyBhcyBhbiBleGVjdXRpdmUgdmljZSBwcmVzaWRlbnQsIHZpY2Ug
cHJlc2lkZW50IG9mIGh1bWFuIHJlc291cmNlcyBhbmQgYXNzb2NpYXRlIGdlbmVyYWwg
Y291bnNlbCBmb3IgYSBtYWpvciBzcG9ydHMgYW5kIGVudGVydGFpbm1lbnQgY29tcGFu
eS4gSGUgd29ya2VkIGZvciBuZWFybHkgYSBkZWNhZGUgaW4gdGhyZWUgcHJvbWluZW50
IFJhbGVpZ2ggbGF3IGZpcm1zLCBlYXJuZWQgYSBiYWNoZWxvcuKAmXMgZGVncmVlIGlu
IGJ1c2luZXNzIGFkbWluaXN0cmF0aW9uIGluIDE5OTMgZnJvbSBDYXJvbGluYSBhbmQg
Z3JhZHVhdGVkIGZyb20gdGhlIFdha2UgRm9yZXN0IFVuaXZlcnNpdHkgbGF3IHNjaG9v
bC4NCg0KSSB3b3VsZCBsaWtlIHRvIHRoYW5rIEpvZWwgQ3VycmFuLCB2aWNlIGNoYW5j
ZWxsb3IgZm9yIGNvbW11bmljYXRpb25zLCB3aG8gY2hhaXJlZCB0aGUgY29tbWl0dGVl
IHRoYXQgY29uZHVjdGVkIHRoZSBuYXRpb25hbCBzZWFyY2ggYW5kIHRoZSBjb21taXR0
ZWUgbWVtYmVyczogRHIuIEJydWNlIENhaXJucywgY2hhaXIgb2YgdGhlIGZhY3VsdHks
IEpvaG4gU3RhY2tob3VzZSBEaXN0aW5ndWlzaGVkIFByb2Zlc3NvciBvZiBTdXJnZXJ5
LCBNaWNyb2Jpb2xvZ3kgYW5kIEltbXVub2xvZ3kgYW5kIGRpcmVjdG9yIG9mIHRoZSBO
b3J0aCBDYXJvbGluYSBKYXljZWUgQnVybiBDZW50ZXI7IERyLiBUZXJyeSBNYWdudXNv
biwgdmljZSBjaGFuY2VsbG9yIGZvciByZXNlYXJjaCwgU2FyYWggR3JhaGFtIEtlbmFu
IFByb2Zlc3NvciBhbmQgZm91bmRpbmcgY2hhaXIgb2YgdGhlIGRlcGFydG1lbnQgb2Yg
Z2VuZXRpY3M7IER3YXluZSBQaW5rbmV5LCBjaGllZiBmaW5hbmNpYWwgb2ZmaWNlciBh
bmQgc2VuaW9yIGFzc29jaWF0ZSB2aWNlIGNoYW5jZWxsb3IgZm9yIGZpbmFuY2UgYW5k
IGFkbWluaXN0cmF0aW9uOyBhbmQgSnVsaWEgU3BydW50IEdydW1ibGVzLCBVbml2ZXJz
aXR5IHRydXN0ZWUuDQoNClBsZWFzZSBqb2luIG1lIGluIGNvbmdyYXR1bGF0aW5nIE1y
LiBTb21lcnMgYW5kIHdpc2hpbmcgaGltIHdlbGwgaW4gaGlzIG5ldyByb2xlLg0KDQpT
aW5jZXJlbHksDQoNCkNhcm9sIEwuIEZvbHQNCkNoYW5jZWxsb3INCg0KVGhpcyBtZXNz
YWdlIGlzIHNwb25zb3JlZCBieTogT2ZmaWNlIG9mIHRoZSBDaGFuY2VsbG9y