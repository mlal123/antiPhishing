DQoNCltjaWQ6aW1hZ2UwMDEucG5nQDAxRDIzNjg5LjJBMjU2OTQwXQ0KDQoNCg0KSGVsbG8gVGFy
IEhlZWxzIQ0KDQoNCkFyZSB5b3UgZ29pbmcgdG8gYmUgaW4gQ2hhcGVsIEhpbGwgZHVyaW5nIFRo
YW5rc2dpdmluZyBicmVhaz8gSWYgc28sIHRoZSBPZmZpY2Ugb2YgU3R1ZGVudCBBZmZhaXJzLCBN
ZW1iZXJzIG9mIFRoZSBDYXJvbGluYSBDbHViIGFuZCBUaGUgRWR1Y2F0aW9uYWwgRm91bmRhdGlv
biB3b3VsZCBsaWtlIHRvIHdlbGNvbWUgeW91IHRvIHRoZSBGb3VydGggQW5udWFsIFRhciBIZWVs
IFRoYW5rc2dpdmluZy4gVGhpcyBldmVudCB3aWxsIGJyaW5nIHRvZ2V0aGVyIHN0dWRlbnRzIGFu
ZCBtZW1iZXJzIG9mIFRoZSBDYXJvbGluYSBDbHViIGZvciBhIHdvbmRlcmZ1bCBUaGFua3NnaXZp
bmcgbWVhbCBhbmQgYSBjaGFuY2UgdG8gZ2V0IHRvIGtub3cgbWVtYmVycyBvZiB0aGUgQ2Fyb2xp
bmEgY29tbXVuaXR5LiDigKjigKgNCg0KDQpXaGF0OiBGUkVFIFRoYW5rc2dpdmluZyBEaW5uZXIg
c3BvbnNvcmVkIGJ5IE1lbWJlcnMgb2YgVGhlIENhcm9saW5hIENsdWIgYW5kIFRoZSBFZHVjYXRp
b25hbCBGb3VuZGF0aW9u4oCo4oCoDQoNCldoZXJlOiBUaGUgQ2Fyb2xpbmEgQ2x1YiAobG9jYXRl
ZCBpbiB0aGUgQWx1bW5pIENlbnRlcinigKjigKgNCg0KV2hvOiBTdHVkZW50cyB0aGF0IHdpbGwg
cmVtYWluIGluIENoYXBlbCBIaWxsIGZvciBUaGFua3NnaXZpbmcNCg0KV2hlbjogMTE6MDBhbSwg
MTI6MzBwbSBvciAyOjAwcG0gVGh1cnNkYXksIE5vdmVtYmVyIDI0dGggMjAxNuKAqOKAqA0KSWYg
eW91IGFyZSBpbnRlcmVzdGVkIGluIGF0dGVuZGluZywgcGxlYXNlIGZpbGwgb3V0IHRoaXMgUlNW
UCBmb3JtIGFzIHNvb24gYXMgcG9zc2libGUgYXMgdGhlIGRlYWRsaW5lIHRvIHJlZ2lzdGVyIGlz
IFRodXJzZGF5LCBOb3ZlbWJlciAxN3RoOiBiaXQubHkvVEhUaGFua3MgPGh0dHBzOi8vZG9jcy5n
b29nbGUuY29tL2Zvcm1zL2QvZS8xRkFJcFFMU2ZlZXA2SEw4dkpsb0I2aThYNThoY0kzSkFrZGFu
dlFmWjRycER0ZVVWdDdTbXdDdy92aWV3Zm9ybT9jPTAmdz0xPg0KKipZb3UgbWF5IGNhbmNlbCB5
b3VyIHJlZ2lzdHJhdGlvbiBpZiB5b3VyIHBsYW5zIGNoYW5nZSoqDQoNCg0KSWYgeW91IGhhdmUg
YW55IGFkZGl0aW9uYWwgcXVlc3Rpb25zIHBsZWFzZSBmZWVsIGZyZWUgdG8gZW1haWwgdGFyaGVl
bHRoYW5rc2dpdmluZ0BnbWFpbC5jb208bWFpbHRvOnRhcmhlZWx0aGFua3NnaXZpbmdAZ21haWwu
Y29tPiAgV2UgaG9wZSB0byBzZWUgeW91IHRoZXJlIQ0KDQoNCg0K
