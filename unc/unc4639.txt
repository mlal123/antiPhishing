T24gYmVoYWxmIG9mIHRoZSBjb21taXR0ZWUgYXBwb2ludGVkIHRvIHJldmlldyB0aGUg
cGVyZm9ybWFuY2Ugb2YgTGF3cmVuY2Ug4oCcQnViYmHigJ0gQ3VubmluZ2hhbSwgRGly
ZWN0b3Igb2YgQXRobGV0aWNzLCBJIGFtIHBsZWFzZWQgdG8gaW52aXRlIHlvdXIgcGFy
dGljaXBhdGlvbiBpbiB0aGUgcmV2aWV3IHByb2Nlc3MuDQoNClRoaXMgcmV2aWV3IHdp
bGwgZm9jdXMgb24gQnViYmEgQ3VubmluZ2hhbeKAmXMgcGVyZm9ybWFuY2UgYXMgRGly
ZWN0b3Igb2YgQXRobGV0aWNzIG92ZXIgdGhlIHBhc3QgZml2ZSB5ZWFycy4gVGhlIGNv
bW1pdHRlZSwgd2hpY2ggd2FzIGFwcG9pbnRlZCBieSBDaGFuY2VsbG9yIENhcm9sIEZv
bHQsIGNvbnNpc3RzIG9mIERlYW4gS2V2aW4gR3Vza2lld2ljeiwgKENoYWlyKTsgV2lu
c3RvbiBDcmlzcCwgVmljZSBDaGFuY2VsbG9yIGZvciBTdHVkZW50IEFmZmFpcnM7IE1h
cmsgTWVycml0dCwgVmljZSBDaGFuY2VsbG9yIGFuZCBHZW5lcmFsIENvdW5zZWw7IExp
c3NhIEJyb29tZSwgUHJvZmVzc29yIG9mIEJhbmtpbmcsIFNjaG9vbCBvZiBMYXcgYW5k
IEZhY3VsdHkgQXRobGV0aWNzIFJlcHJlc2VudGF0aXZlOyBKZW5ueSBMZXZ5LCBIZWFk
IFdvbWVu4oCZcyBMYWNyb3NzZSBDb2FjaCwgSGFybGlzIE1lYWRlcnMsIEhlYWQgQ29h
Y2gsIFRyYWNrIGFuZCBDcm9zcyBDb3VudHJ5OyBOaWNraSBNb29yZSwgU2VuaW9yIEFz
c29jaWF0ZSBBdGhsZXRpYyBEaXJlY3RvcjsgUmljayBTdGVpbmJhY2hlciwgQXNzb2Np
YXRlIEF0aGxldGljIERpcmVjdG9yIG9mIE1hcmtldGluZyBhbmQgUHJvbW90aW9uOyBK
b3kgUmVubmVyLCBBc3NvY2lhdGUgUHJvZmVzc29yL0RpcmVjdG9yLCBBbGxpZWQgSGVh
bHRoLCBGYWN1bHR5IEFkdmlzb3IgaW4gQWNhZGVtaWMgQWR2aXNpbmc7IEpvaG4gQi4g
U3RlcGhlbnMsIEFzc29jaWF0ZSBQcm9mZXNzb3IsIFB1YmxpYyBBZG1pbmlzdHJhdGlv
biBhbmQgR292ZXJubWVudCwgU2Nob29sIG9mIEdvdmVybm1lbnQgYW5kIENoYWlyLCBG
YWN1bHR5IEF0aGxldGljcyBDb21taXR0ZWU7IFJ1ZGkgQ29sbG9yZWRvLU1hbnNmaWVs
ZCwgQ2hhaXIsIERlcGFydG1lbnQgb2YgQW50aHJvcG9sb2d5LCBDb2xsZWdlIG9mIEFy
dHMgYW5kIFNjaWVuY2VzOyBhbmQgU3RldmUgRmFybWVyLCBWaWNlIFByb3Zvc3QgZm9y
IEVucm9sbG1lbnQgYW5kIFVuZGVyZ3JhZHVhdGUgQWRtaXNzaW9ucy4NCg0KQXJlYXMg
Zm9yIHJldmlldyBpbmNsdWRlOiB2aXNpb24gYW5kIGxvbmctcmFuZ2UgcGxhbm5pbmc7
IHRpbWUswqBmaXNjYWwgYW5kIHJlc291cmNlIG1hbmFnZW1lbnQ7IGxlYWRlcnNoaXAg
aW4gZnVuZHJhaXNpbmcgYW5kIHJldmVudWUgZGV2ZWxvcG1lbnQ7IGNvbW11bmljYXRp
b24gYWJpbGl0aWVzO8KgbGVhZGVyc2hpcCBpbiBkaXJlY3RpbmcgaGlnaCBxdWFsaXR5
IGF0aGxldGljcyBkZXBhcnRtZW50IHdpdGggY2xlYXJseSBhcnRpY3VsYXRlZCBnb2Fs
czsgcmVjcnVpdG1lbnQgYW5kIHJldGVudGlvbiBvZiBzdGFmZiBvZiBoaWdoIHF1YWxp
dHk7IHByb2Zlc3Npb25hbCBsZWFkZXJzaGlwOyBldmFsdWF0aW5nLCBtZW50b3Jpbmcs
IGFuZCBudXJ0dXJpbmcgc3RhZmYgdG8gbWVldCBvcmdhbml6YXRpb25hbCBnb2Fsczsg
YWRoZXJpbmcgdG8gdGhlIFVuaXZlcnNpdHnigJlzIHByaW1hcnkgbWlzc2lvbiBvZiBl
ZHVjYXRpbmcgc3R1ZGVudHMgd2l0aCBhbiBleHBlY3RhdGlvbiBvZiBtYWludGFpbmlu
ZyBjb21wZXRpdGl2ZW5lc3M7IGVuY291cmFnaW5nIGEgY3VsdHVyZSBvZiBpbmNsdXNp
dmVuZXNzIGluIHdoaWNoIGRpdmVyc2l0eSBpcyB2YWx1ZWQ7IGFuZCBwcm92aWRpbmcg
c3Ryb25nIHJlcHJlc2VudGF0aW9uIGZvciB0aGUgVW5pdmVyc2l0eSBpbsKgcHJvZmVz
c2lvbmFsIG9yZ2FuaXphdGlvbnMuDQoNClRoZSBjb21taXR0ZWUgaW52aXRlcyB5b3Vy
IGNvbW1lbnRzIG9uIHRoZXNlIGFuZCByZWxhdGVkIGlzc3Vlcy4gSXQgaXMgaW1wb3J0
YW50IGZvciB0aGUgY29tbWl0dGVlIHRvIGhhdmUgc29tZSBzZW5zZSBvZiBob3cgQnVi
YmEgQ3VubmluZ2hhbcKgaXMgdmlld2VkIGJ5IGhpcyBwZWVycyBhdCBVTkMtQ2hhcGVs
IEhpbGwgYXMgYSBjb2xsZWFndWUsIGxlYWRlcsKgYW5kIGNpdGl6ZW4gb2YgdGhlIFVu
aXZlcnNpdHkgY29tbXVuaXR5Lg0KDQpXZSBlbmNvdXJhZ2UgeW91IHRvIGNvbnRyaWJ1
dGUgdG8gdGhpcyByZXZpZXcgaW4gdGhlIGZvbGxvd2luZyBkaWZmZXJlbnQgd2F5czoN
Cg0KVGhlIGNvbW1pdHRlZSBoYXMgc2NoZWR1bGVkIG9wcG9ydHVuaXRpZXMgdG8gcmVj
ZWl2ZSBjb21tZW50cyBieSBhcHBvaW50bWVudCBvbmx5IG9uIHRoZSBmb2xsb3dpbmcg
dHdvIGRhdGVzOg0KDQpNYXJjaCAyMXN0IGZyb20gMTI6MDAgbm9vbiDigJMgMTozMCBw
Lm0uDQoNCk1hcmNoIDIzcmQgZnJvbSAyOjAwIHAubS4g4oCTIDU6MDAgcC5tLsKgDQoN
CklmIHlvdSB3aXNoIHRvIG1lZXQgd2l0aCB0aGUgY29tbWl0dGVlLCBwbGVhc2UgY29u
dGFjdCBBbGV4aXMgQ2xpbmUsIEFzc2lzdGFudCB0byB0aGUgRGVhbiAoYWxleGlzQHVu
Yy5lZHUgb3IgOTYyLTMwODIpLCBhbmQgc2hlIHdpbGwgc2NoZWR1bGUgYSBzcGVjaWZp
YyB0aW1lICh1c3VhbGx5IGFib3V0IDEwLTE1IG1pbnV0ZXMpIHdpdGhpbiB0aGF0IHRp
bWUgcGVyaW9kLsKgIE5vdGUgdGhhdCB3aGlsZSBhbGwgY29tbWVudHMgZHVyaW5nIHRo
ZXNlIHNlc3Npb25zIHdpbGwgYmUga2VwdCBzdHJpY3RseSBjb25maWRlbnRpYWwsIGEg
bWFzdGVyIGxpc3Qgb2YgYXR0ZW5kZWVzIHdpbGwgYmUga2VwdCBhcyBwYXJ0IG9mIEJ1
YmJhIEN1bm5pbmdoYW3igJlzIHBlcnNvbm5lbCBmaWxlLg0KDQpZb3UgbWF5IGNvbnRy
aWJ1dGUgdG8gdGhpcyByZXZpZXcgYnkgcHJvdmlkaW5nIHdyaXR0ZW4gY29tbWVudHMg
dG8gdGhlIENoYWlyLsKgwqAgVGhlIHJldmlldyBjb21taXR0ZWUgd2lsbCB0cmVhdCB5
b3VyIGNvbW1lbnRzIGFzIHN0cmljdGx5IGNvbmZpZGVudGlhbC7CoCBIb3dldmVyLCBi
eSBsYXcsIGFsbCB3cml0dGVuIGNvbW11bmljYXRpb24sIHdoZXRoZXIgb24gcGFwZXIg
b3IgYnkgZW1haWwsIGJlY29tZXMgYSBjb25maWRlbnRpYWwgcGFydCBvZiBCdWJiYSBD
dW5uaW5naGFt4oCZcyBwZXJzb25uZWwgZmlsZSBhbmQgYXMgc3VjaCwgaXMgb3BlbiB0
byBleGFtaW5hdGlvbiBieSBoaW0uwqDCoCBVbml2ZXJzaXR5IHJlZ3VsYXRpb25zIHBy
b2hpYml0IGNvbnNpZGVyYXRpb24gb2YgYW5vbnltb3VzIGxldHRlcnMgaW4gdGhlIHJl
dmlldyBwcm9jZXNzLsKgIMKgDQoNCkFsbCB3cml0dGVuIGNvbW1lbnRzIHNob3VsZCBi
ZSBzZW50IHRvOsKgIERlYW4gS2V2aW4gR3Vza2lld2ljeiBjL28gQWxleGlzIENsaW5l
LCAyMDUgU291dGggQnVpbGRpbmcsIENCICMgMzEwMCwgb3IgYnkgZW1haWxpbmcgYWxl
eGlzQHVuYy5lZHXCoA0KDQpZb3UgbWF5IHRlbGVwaG9uZSBvciBtZWV0IHByaXZhdGVs
eSBpbiBwZXJzb24gd2l0aCBjb21taXR0ZWUgbWVtYmVycy7CoCBPcmFsIGNvbW11bmlj
YXRpb25zIChieSB0ZWxlcGhvbmUgb3IgaW4gcGVyc29uKSBhbmQgdGhlIGNvbW1pdHRl
ZSdzIG5vdGVzIGdlbmVyYXRlZCBmcm9tIHRoZXNlIGNvbnZlcnNhdGlvbnMgZG8gbm90
IGJlY29tZSBwYXJ0IG9mIEJ1YmJhIEN1bm5pbmdoYW3igJlzIHBlcnNvbm5lbCBmaWxl
IGJ1dCBtYXkgYmUgcmVmbGVjdGVkIGluIHRoZSBjb21taXR0ZWXigJlzIHJlcG9ydCB3
aXRob3V0IGlkZW50aWZpZXJzLg0KDQpUaGUgZGVhZGxpbmUgZm9yIHJlY2VpdmluZyBj
b21tZW50cyBpcyBNYXJjaCAyM3JkLg0KDQpSZXNwZWN0ZnVsbHksDQoNCg0KS2V2aW4g
TS4gR3Vza2lld2ljeiwgRGVhbiwgQ29sbGVnZSBvZiBBcnRzIGFuZCBTY2llbmNlcywg
Q2hhaXIsIEFkbWluaXN0cmF0aXZlIFJldmlldyBDb21taXR0ZWUNCg0KDQpUaGlzIG1l
c3NhZ2UgaXMgc3BvbnNvcmVkIGJ5OiBEZWFuJ3Mgb2ZmaWNlLCBDb2xsZWdlIG9mIEFy
dHMgYW5kIFNjaWVuY2Vz