wqANCg0KRGVhciBDYW1wdXMgQ29tbXVuaXR5Og0KDQpQcm92b3N0IEppbSBEZWFuIGFu
ZCBJIGFyZSBwbGVhc2VkIHRvIGFubm91bmNlIHRoYXQgRHIuIFNjb3R0IERlIFJvc3Np
IGhhcyBiZWVuIHNlbGVjdGVkIGFzIHRoZSBuZXcgZGVhbiBmb3IgdGhlIFNjaG9vbCBv
ZiBEZW50aXN0cnkuIEhlIHdhcyBtb3N0IHJlY2VudGx5IHRoZSBDaGFpcm1hbiBvZiB0
aGUgRGVwYXJ0bWVudCBvZiBPcmFsIEhlYWx0aCBhbmQgRGlhZ25vc3RpYyBTY2llbmNl
cyBhdCBBdWd1c3RhIFVuaXZlcnNpdHnigJlzIERlbnRhbCBDb2xsZWdlIG9mIEdlb3Jn
aWEuIFRoZSBVbml2ZXJzaXR5IGFwcG9pbnRtZW50LCBlZmZlY3RpdmUgSmFuLiAxNSwg
MjAxNywgd2FzIGFwcHJvdmVkIGJ5IHRoZSBVbml2ZXJzaXR54oCZcyBCb2FyZCBvZiBU
cnVzdGVlcy4NCg0KQSBsZWFkaW5nIG9yYWwgbWVkaWNpbmUgY2xpbmljaWFuIGFuZCBz
Y2llbnRpc3QsIERyLiBEZSBSb3NzaSBicmluZ3MgY2xpbmljYWwgYW5kIHJlc2VhcmNo
IGV4cGVydGlzZSwgYWxvbmcgd2l0aCBoaXMgYnVzaW5lc3MgZWR1Y2F0aW9uLiBIaXMg
Y29uY2VybiBmb3IgZmFjdWx0eSBhbmQgc3R1ZGVudCBkaXZlcnNpdHkgYW5kIGdsb2Jh
bGl6YXRpb24gd2lsbCBoZWxwIG91ciBTY2hvb2wgb2YgRGVudGlzdHJ5IGFjaGlldmUg
aXRzIHZpc2lvbiB0byBiZSBhIHdvcmxkIGxlYWRlciBpbiBpbXByb3Zpbmcgb3JhbCBo
ZWFsdGggdGhyb3VnaCBleGNlbGxlbmNlIGluIGVkdWNhdGlvbiwgcGF0aWVudCBjYXJl
LCByZXNlYXJjaCwgcHVibGljIHNlcnZpY2UgYW5kIGVuZ2FnZW1lbnQuDQoNCkRyLiBE
ZSBSb3NzaSBpcyBhIGRpcGxvbWF0ZSBpbiB0aGUgQW1lcmljYW4gQm9hcmQgb2YgT3Jh
bCBNZWRpY2luZS4gSGUgaXMgYWN0aXZlIGluIGEgbnVtYmVyIG9mIHByb2Zlc3Npb25h
bCBvcmdhbml6YXRpb25zLCBpbmNsdWRpbmcgdGhlIEFtZXJpY2FuIERlbnRhbCBBc3Nv
Y2lhdGlvbiwgdGhlIEFtZXJpY2FuIEFzc29jaWF0aW9uIG9mIERlbnRhbCBSZXNlYXJj
aCwgdGhlIEFtZXJpY2FuIERlbnRhbCBFZHVjYXRpb24gQXNzb2NpYXRpb24gYW5kIHRo
ZSBBbWVyaWNhbiBBY2FkZW15IG9mIE9yYWwgTWVkaWNpbmUsIHdoZXJlIGhlIHNlcnZl
cyBvbiB0aGUgYm9hcmQgb2YgdHJ1c3RlZXMgYW5kIGFzIHRyZWFzdXJlciBvbiB0aGUg
ZXhlY3V0aXZlIGNvbW1pdHRlZS4NCg0KSGUgZWFybmVkIGhpcyBkb2N0b3Igb2YgZGVu
dGFsIG1lZGljaW5lIGRlZ3JlZSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFBlbm5zeWx2
YW5pYSBTY2hvb2wgb2YgRGVudGFsIE1lZGljaW5lLCBncmFkdWF0aW5nIHdpdGggaGln
aGVzdCBob25vcnMsIGFuZCBhIGNlcnRpZmljYXRlIGluIG9yYWwgbWVkaWNpbmUgZnJv
bSB0aGUgSG9zcGl0YWwgb2YgdGhlIFVuaXZlcnNpdHkgb2YgUGVubnN5bHZhbmlhLiBI
ZSBlYXJuZWQgYSBiYWNoZWxvciBvZiBzY2llbmNlIGRlZ3JlZSBmcm9tIFByb3ZpZGVu
Y2UgQ29sbGVnZSBpbiBQcm92aWRlbmNlLCBSaG9kZSBJc2xhbmQuIEhlIGV4cGVjdHMg
dG8gcmVjZWl2ZSBhIG1hc3RlcuKAmXMgaW4gYnVzaW5lc3MgYWRtaW5pc3RyYXRpb24g
ZnJvbSBBdWd1c3RhIFVuaXZlcnNpdHkgSHVsbCBDb2xsZWdlIG9mIEJ1c2luZXNzIGlu
IERlY2VtYmVyLg0KDQpEci4gRGUgUm9zc2kgd2lsbCBzdWNjZWVkIERyLiBKYW5lIFdl
aW50cmF1Yiwgd2hvIGFubm91bmNlZCBpbiBEZWNlbWJlciAyMDE1IHRoYXQgc2hlIHdv
dWxkIHN0ZXAgZG93biBhdCB0aGUgZW5kIG9mIGFjYWRlbWljIHllYXIgYWZ0ZXIgZml2
ZSB5ZWFycyB0byByZXR1cm4gdG8gcmVzZWFyY2ggYW5kIHRlYWNoaW5nLiBTaGUgd2ls
bCBjb250aW51ZSBoZXIgZmFjdWx0eSBhcHBvaW50bWVudCBpbiB0aGUgRGVwYXJ0bWVu
dCBvZiBEZW50YWwgRWNvbG9neSB3aXRoIGFuIGFkanVuY3QgYXBwb2ludG1lbnQgaW4g
dGhlIEdpbGxpbmdzIFNjaG9vbCBvZiBHbG9iYWwgUHVibGljIEhlYWx0aC4gRHIuIFdl
aW50cmF1YiBzZXJ2ZWQgYXMgZGVhbiBzaW5jZSAyMDExLCBsZWFkaW5nIHRoZSBzY2hv
b2wgdG8gZWFybiB0d28gR2llcyBhd2FyZHMsIGluY3JlYXNpbmcgZnVuZGluZyBmcm9t
IHRoZSBOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aC9OYXRpb25hbCBJbnN0aXR1
dGUgb2YgRGVudGFsIGFuZCBDcmFuaW9mYWNpYWwgUmVzZWFyY2ggYW5kIHJlY3J1aXRp
bmcgbmV3IGZhY3VsdHkgdG8gaW5jcmVhc2UgdGhlIHNjaG9vbOKAmXMgZGl2ZXJzaXR5
IGluIG1hbnkgd2F5cy4NCg0KRHIuIEtlbiBNYXkgaGFzIHNlcnZlZCBhcyBpbnRlcmlt
IGRlYW4gc2luY2UgSnVseSBhbmQgd2lsbCByZXRpcmUgYWZ0ZXIgRHIuIERlIFJvc3Np
IGFycml2ZXMuIEFzIGludGVyaW0gZGVhbiwgTWF5IGxlZCBjcml0aWNhbCBuZWFyLXRl
cm0gaW5pdGlhdGl2ZXMsIGluY2x1ZGluZyBjb250aW51aW5nIHRoZSBncm93dGggb2Yg
dGhlIFNjaG9vbCBvZiBEZW50aXN0cnnigJlzIHJlc2VhcmNoIHBvcnRmb2xpbywgZmFj
aWxpdGF0aW5nIHRoZSBzdHJhdGVnaWMgcGxhbm5pbmcgcHJvY2VzcywgZ3VpZGluZyB0
aGUgU2Nob29sIHRocm91Z2ggaXRzIGFjY3JlZGl0YXRpb24gc2l0ZSB2aXNpdCBpbiB0
aGUgZmFsbCBhbmQgY29udGludWluZyB0aGUgU2Nob29s4oCZcyBvbmdvaW5nIGVmZm9y
dHMgZm9yIGdyZWF0ZXIgZGl2ZXJzaXR5IGFuZCBpbmNsdXNpb24uDQoNCkluIGFkZGl0
aW9uLCB3ZSB3b3VsZCBsaWtlIHRvIHRoYW5rIHRoZSBzZWFyY2ggY29tbWl0dGVlIGZv
ciB0aGVpciB3b3JrLiBNYXJ0aW4gQnJpbmtsZXksIGRlYW4sIFVOQyBTY2hvb2wgb2Yg
TGF3LCBzZXJ2ZWQgYXMgdGhlIGNoYWlyLiBDb21taXR0ZWUgbWVtYmVycyBpbmNsdWRl
ZDogSmVubmlmZXIgV2Vic3Rlci1DeXJpYXF1ZSwgUHJvZmVzc29yLCBEZW50YWwgRWNv
bG9neTsgU3RlcGhlbiBPZmZlbmJhY2hlciwgQ2hhaXIgYW5kIEtlbmFuIERpc3Rpbmd1
aXNoZWQgUHJvZmVzc29yLCBQZXJpb2RvbnRpY3M7IEdyZWcgRXNzaWNrLCBQcm9mZXNz
b3IsIFByb3N0aG9kb250aWNzOyAoTmlnZWwpIFNoYXVuIE1hdHRoZXdzLCBDbGluaWNh
bCBBc3NvY2lhdGUgUHJvZmVzc29yLCBPcmFsIGFuZCBNYXhpbGxvZmFjaWFsIFN1cmdl
cnk7IFJvY2lvIFF1aW5vbmV6LCBBc3NvY2lhdGUgUHJvZmVzc29yLCBQZWRpYXRyaWMg
RGVudGlzdHJ5OyBKZW5uaWUgQnJhbWUsIENsaW5pY2FsIEFzc29jaWF0ZSBQcm9mZXNz
b3IsIERlbnRhbCBIeWdpZW5lIFByb2dyYW07IFNob291LVlpaCBEYW5pZWwgTGVlLCBQ
cm9mZXNzb3IgYW5kIENoYWlyLCBIZWFsdGggUG9saWN5IGFuZCBBZG1pbmlzdHJhdGlv
biwgR2lsbGluZ3MgU2Nob29sIG9mIEdsb2JhbCBQdWJsaWMgSGVhbHRoOyBSdW1heSBB
bGV4YW5kZXIsIEludGVyaW0gQ2hpZWYgRGl2ZXJzaXR5IE9mZmljZXIgYW5kIENsaW5p
Y2FsIFByb2Zlc3NvciwgVU5DIFNjaG9vbCBvZiBOdXJzaW5nOyBUZXJlc2EgQnJvd24s
IFN0YWZmLCBEZW50YWwgRmFjdWx0eSBQcmFjdGljZTsgS2F1c2hhbCBHYW5kaGkgKERE
UyAyMDE3KSwgU3B1cmdlb24gRGVudGFsIFNvY2lldHkgUHJlc2lkZW50LCBTdHVkZW50
IFJlcHJlc2VudGF0aXZlOyBSb24gVmVuZXppZSwgUHJlc2lkZW50LCBOQyBEZW50YWwg
U29jaWV0eTsgS2FyYSBIZW5kZXJzb24tSmVmZmVyaWVzLCBEZW50YWwgRm91bmRhdGlv
biBvZiBOb3J0aCBDYXJvbGluYSBQcmVzaWRlbnQgRWxlY3Q7IGFuZCBTY290dCBFaWRz
b24sIENsaW5pY2FsIEFzc29jaWF0ZSBQcm9mZXNzb3IsIE9wZXJhdGl2ZSBEZW50aXN0
cnkuDQoNClBsZWFzZSBqb2luIG1lIGluIGNvbmdyYXR1bGF0aW5nIFNjb3R0IERlIFJv
c3NpIG9uIGhpcyBhcHBvaW50bWVudCBhbmQgaW4gdGhhbmtpbmcgSmFuZSBXZWludHJh
dWIgZm9yIGhlciBzZXJ2aWNlIGFzIGRlYW4gYW5kIEtlbiBNYXkgZm9yIGhpcyBzZXJ2
aWNlIGFzIGludGVyaW0gZGVhbi4NCg0KU2luY2VyZWx5LA0KDQpDYXJvbCBMLiBGb2x0
DQpDaGFuY2VsbG9yDQoNCkphbWVzIFcuIERlYW4gSnIuDQpFeGVjdXRpdmUgVmljZSBD
aGFuY2VsbG9yIGFuZCBQcm92b3N0DQoNCsKgDQoNClRoaXMgbWVzc2FnZSBpcyBzcG9u
c29yZWQgYnk6IE9mZmljZSBvZiB0aGUgQ2hhbmNlbGxvcg==