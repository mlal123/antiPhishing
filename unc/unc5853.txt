DQpEZWFyIENhbXB1cyBDb21tdW5pdHk6DQoNCldlIGFyZSB3cml0aW5nIHRvIGxldCB5
b3Uga25vdyB3ZSBhcmUgYXdhcmUgb2YgYSBwb3NzaWJsZSByYWxseSBhdCB0aGUgQ29u
ZmVkZXJhdGUgTW9udW1lbnQsIGJldHRlciBrbm93biBhcyBTaWxlbnQgU2FtLCB0b21v
cnJvdyBldmVuaW5nLCBUdWVzZGF5LCBBdWcuIDIyLiBUaGUgcmFsbHkgaXMgYmVpbmcg
cHJvbW90ZWQgYnkgZ3JvdXBzIG5vdCBhZmZpbGlhdGVkIHdpdGggQ2Fyb2xpbmEgYnV0
IHdlIHJlYWxpemUgdGhpcyBldmVudCBtYXkgZ2FybmVyIGludGVyZXN0IGFtb25nIHRo
b3NlIG9uIG91ciBjYW1wdXMuDQoNCkZvbGxvd2luZyB0aGUgdHJhZ2ljIGFuZCBob3Jy
aWZpYyBldmVudHMgaW4gQ2hhcmxvdHRlc3ZpbGxlLCBhcyB3ZWxsIGFzIG90aGVyIGRl
bW9uc3RyYXRpb25zIGFyb3VuZCB0aGUgY291bnRyeSBpbmNsdWRpbmcgaW4gRHVyaGFt
LCB3ZSB1bmRlcnN0YW5kIHRoZSBzdHJvbmcgZGVzaXJlIG9mIHNvbWUgbWVtYmVycyBv
ZiBvdXIgY29tbXVuaXR5IHRvIHBhcnRpY2lwYXRlIGluIGEgcHJvdGVzdCBjYWxsaW5n
IGZvciB0aGUgcmVtb3ZhbCBvZiB0aGUgQ29uZmVkZXJhdGUgTW9udW1lbnQuIFRoYXQg
aXMgYXMgaXQgc2hvdWxkIGJlLiBDYXJvbGluYSBhc3BpcmVzIHRvIGJlIGEgcGxhY2Ug
d2hlcmUgd2UgY2FuIGRpc2N1c3MgYW5kIGV4cHJlc3Mgb3VyIGRpZmZlcmVuY2VzIGFu
ZCBzdGlsbCBjb21lIHRvZ2V0aGVyIGluIGEgcGVhY2VmdWwgbWFubmVyLg0KDQpXZSBh
bHNvIGtub3cgdGhhdCBtYW55IGluIG91ciBjb21tdW5pdHkgaGF2ZSBleHByZXNzZWQg
Y29uY2VybnMgYWJvdXQgdGhlaXIgc2FmZXR5IG9uIGFuZCBhcm91bmQgdGhlIGNhbXB1
cyBkdXJpbmcgc3VjaCBldmVudHMuIEFuZCB3ZSBrbm93IHRoYXQgdGhlIG91dHNpZGUg
Z3JvdXBzIHdobyBtYXkgYXR0ZW5kIHN1Y2ggYSByYWxseSBtYXkgYmUgbW9yZSBpbnRl
cmVzdGVkIGluIHByb21vdGluZyBkaXNjb3JkIGFuZCB2aW9sZW5jZSB0byBhZHZhbmNl
IHRoZWlyIG93biBhZ2VuZGFzIHRoYW4gZW5nYWdpbmcgaW4gYSBjb25zdHJ1Y3RpdmUg
YW5kIHBlYWNlZnVsIHByb3Rlc3QuDQoNCldlIGFyZSBhbHdheXMgY29uY2VybmVkIGFi
b3V0IHNhZmV0eSBvbiB0aGUgY2FtcHVzIGFuZCBpZiB3ZSBoYWQgdGhlIGFiaWxpdHkg
dG8gaW1tZWRpYXRlbHkgbW92ZSB0aGUgc3RhdHVlIGluIHRoZSBpbnRlcmVzdCBvZiBw
dWJsaWMgc2FmZXR5LCB3ZSB3b3VsZC4gSG93ZXZlciwgd2hpbGUgd2Ugd2lsbCBjb250
aW51ZSB0byBleHBsb3JlIGFsbCBvcHRpb25zLCB0aGUgVW5pdmVyc2l0eSBjdXJyZW50
bHkgZG9lcyBub3QgaGF2ZSB0aGF0IHVuaWxhdGVyYWwgYXV0aG9yaXR5IG9yIGxlZ2Fs
IGFiaWxpdHkgdG8gZG8gc28uIEFuZCB0aGUgVW5pdmVyc2l0eSBtdXN0IG9iZXkgdGhl
IGxhdy4NCg0KV2UgYXJlIHdvcmtpbmcgY2xvc2VseSB3aXRoIHRoZSBVTkMgR2VuZXJh
bCBBZG1pbmlzdHJhdGlvbiBhbmQgdGhlIFN0YXRlIG9mIE5vcnRoIENhcm9saW5hIHRv
IGxvb2sgZm9yIHNvbHV0aW9ucy4gSW4gdGhlIG1lYW50aW1lLCBhcyB3ZSBoYXZlIGRv
bmUgaW4gdGhlIHBhc3QsIFVOQyBQb2xpY2UsIGF1Z21lbnRlZCBieSBvdGhlciBsYXcg
ZW5mb3JjZW1lbnQgYWdlbmNpZXMsIHdpbGwgdGFrZSBzdHJvbmcgbWVhc3VyZXMgdG8g
aGVscCBlbnN1cmUgdGhhdCBldmVudHMgc3VjaCBhcyB0aGUgb25lIHBsYW5uZWQgZm9y
IFR1ZXNkYXkgZXZlbmluZyB0YWtlIHBsYWNlIGluIGEgc2FmZSBlbnZpcm9ubWVudC4g
DQoNCk91ciBjb25jZXJuIGlzIGFsd2F5cyBmb3IgeW91ciBzYWZldHkgYW5kIHNvIGNv
bnNpZGVyaW5nIHRoZSBwb3RlbnRpYWwgZm9yIGEgaGlnaGx5IGNoYXJnZWQgYXRtb3Nw
aGVyZSBhbmQgdGhlIHZlcnkgcmVhbCBwb3NzaWJpbGl0eSBmb3IgY29uZnJvbnRhdGlv
biB3aXRoIG91dHNpZGUgZ3JvdXBzLCB3ZSB3b3VsZCBlbmNvdXJhZ2UgeW91IG5vdCB0
byBhdHRlbmQgdGhlIHJhbGx5IG9uIFR1ZXNkYXkuIEhvd2V2ZXIsIGlmIHlvdSBkbyBj
aG9vc2UgdG8gYXR0ZW5kLCB3ZSBhc2sgeW91IHRvIHN0YXkgYWxlcnQgYW5kIHZpZ2ls
YW50LiBDYW1wdXMgcG9saWNlIHdpbGwgYmUgcHJlc2VudCB0byBoZWxwIGFkZHJlc3Mg
c2FmZXR5IGNvbmNlcm5zLiBJZiB5b3UgYXJlIG5vdCBhdHRlbmRpbmcgdGhpcyBldmVu
dCwgcGxlYXNlIGF2b2lkIE1jQ29ya2xlIFBsYWNlIGFuZCB0aGUgYXJlYSBhcm91bmQg
dGhlIENvbmZlZGVyYXRlIE1vbnVtZW50Lg0KDQpXZSB3aWxsIGNvbnRpbnVlIHRvIG1v
bml0b3IgcGxhbnMgZm9yIHRoaXMgcmFsbHkuIElmIHlvdSBsZWFybiBvZiBpbmZvcm1h
dGlvbiByZWxhdGVkIHRvIHRoZSBldmVudCB0aGF0IHlvdSB3b3VsZCBsaWtlIHRvIHNo
YXJlLCBwbGVhc2UgY29udGFjdCBVbml2ZXJzaXR5IFBvbGljZSBhdCA5MTktOTYyLTgx
MDAuDQoNClNpbmNlcmVseSwNCkNhcm9sIEwuIEZvbHQNCkNoYW5jZWxsb3INCg0KV2lu
c3RvbiBDcmlzcA0KVmljZSBDaGFuY2VsbG9yIGZvciBTdHVkZW50IEFmZmFpcnMNCg0K
SmVmZiBNY0NyYWNrZW4NCkNoaWVmIG9mIFBvbGljZQ0KDQrCoA0KDQrCoA0KDQpUaGlz
IG1lc3NhZ2UgaXMgc3BvbnNvcmVkIGJ5OiBPZmZpY2Ugb2YgdGhlIENoYW5jZWxsb3I=