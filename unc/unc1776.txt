DQpEZWFyIENhbXB1cyBDb21tdW5pdHksDQoNCldlIGFyZSB3cml0aW5nIHRvIHVwZGF0
ZSB5b3Ugb24gb3VyIGVmZm9ydHMgdG8gdW5kZXJzdGFuZCBhbmQgYWRkcmVzcyB0aGUg
ZWZmZWN0cyBvZiBIb3VzZSBCaWxsIDIgdGhhdCB3YXMgcGFzc2VkIGJ5IHRoZSBOQyBH
ZW5lcmFsIEFzc2VtYmx5IGFuZCBzaWduZWQgYnkgR292LiBQYXQgTWNDcm9yeSBvbiBX
ZWRuZXNkYXksIE1hcmNoIDIzLsKgIFNpbmNlIHRoZW4sIHdl4oCZdmUgaGVhcmQgZnJv
bSBhIGdyZWF0IG1hbnkgc3R1ZGVudHMsIHN0YWZmIGFuZCBmYWN1bHR5LCBib3RoIHRo
b3NlIHdobyBzdXBwb3J0IHRoZSBsZWdpc2xhdGlvbiBhbmQgbWFueSB3aG8gaGF2ZSBj
b25jZXJucyBhbmQgcXVlc3Rpb25zIGFib3V0IHRoZSBpbXBhY3Qgb2YgdGhpcyBiaWxs
IG9uIG91ciBVbml2ZXJzaXR5IGNvbW11bml0eS7CoCBXaGF0IGlzIGFic29sdXRlbHkg
Y2xlYXIgaXMgdGhhdCBtYW55IGluIG91ciBjb21tdW5pdHksIHBhcnRpY3VsYXJseSB0
aG9zZSBpZGVudGlmeWluZyBhcyBMR0JUUSwgYXJlIGV4cGVyaWVuY2luZyBhIGdyZWF0
IGRlYWwgb2YgdW5jZXJ0YWludHksIGh1cnQsIGFuZ2VyIGFuZCBmZWFyLg0KDQpUaGlz
IGxlZ2lzbGF0aW9uIGhhcyByYWlzZWQgbWFueSBxdWVzdGlvbnMgZm9yIG91ciBjYW1w
dXMgY29tbXVuaXR5IGZvciB3aGljaCB3ZeKAmXJlIHNlZWtpbmcgYW5zd2Vycy4gwqDC
oEFuZCBiZWNhdXNlIHRoaXMgaXMgYSBzeXN0ZW0td2lkZSBpc3N1ZSwgd2XigJlyZSB3
b3JraW5nIHdpdGggdGhlIEdlbmVyYWwgQWRtaW5pc3RyYXRpb24gdG8gZGV0ZXJtaW5l
IHdoYXQgaXQgYWxsIG1lYW5zLiDCoEJ1dCB3aGlsZSB3ZSBoYXZlIHlldCB0byBmaW5k
IGFuc3dlcnMgZm9yIGV2ZXJ5IHF1ZXN0aW9uLCB3ZSB3YW50IHRvIGFzc3VyZSB5b3Ug
dGhhdCB0aGUgUHJvdm9zdOKAmXMgT2ZmaWNlLCBPZmZpY2Ugb2YgU3R1ZGVudCBBZmZh
aXJzLCBPZmZpY2Ugb2YgVW5pdmVyc2l0eSBDb3Vuc2VsLCBPZmZpY2Ugb2YgSHVtYW4g
UmVzb3VyY2VzLCBhbmQgdGhlIEVxdWFsIE9wcG9ydHVuaXR5IGFuZCBDb21wbGlhbmNl
IE9mZmljZSBhcmUgd29ya2luZyB0b2dldGhlciB0byB1bmRlcnN0YW5kIGFsbCB0aGUg
aW1wbGljYXRpb25zIG9mIHRoaXMgbGF3LCB0byBjaGFydCBob3cgaXQgd2lsbCBhZmZl
Y3QgdXMsIGFuZCB0byBmaW5kIHRoZSByaWdodCBwYXRoIGZvcndhcmQuDQoNCldoYXQg
aGFzbuKAmXQgY2hhbmdlZCBpcyB0aGUgZ3JlYXRlc3Qgc3RyZW5ndGggb2YgdGhpcyBw
bGFjZTogwqB0aGUgZ29vZCBwZW9wbGUgd2hvIGNvbWUgaGVyZSBldmVyeSBkYXkgdG8g
bGl2ZSwgbGVhcm4gYW5kIHdvcmsuwqAgV2UgYXJlIGNvbW1pdHRlZCB0byBlbnN1cmlu
ZyB0aGF0IGV2ZXJ5b25lIGlzIHRyZWF0ZWQgd2l0aCBkaWduaXR5IGFuZCByZXNwZWN0
IGFuZCB0aGF0IG5vIG9uZSBmZWFycyBmb3IgdGhlaXIgc2FmZXR5IG9yIGlzIG1hZGUg
dG8gZmVlbCB1bndlbGNvbWUuIEFuZCB3ZSByZW1haW4gY29tbWl0dGVkIHRvIGNvbnRp
bnVlIHRvIHdvcmsgaGFyZCB0byBmaW5kIHdheXMgdG8gYWRkcmVzcyB0aGUgbmVlZHMg
b2YgYWxsIG91ciBzdHVkZW50cywgZmFjdWx0eSwgc3RhZmYgYW5kIHZpc2l0b3JzIHRv
IG91ciBjYW1wdXMuDQoNCldl4oCZbGwgY29tbXVuaWNhdGUgd2l0aCB5b3UgYXMgbXVj
aCBhcyB3ZSBjYW4gdGhyb3VnaG91dCB0aGlzIHByb2Nlc3MuwqAgSW4gcmVzcG9uc2Ug
dG8gaW5xdWlyaWVzIGFib3V0IHRoZSBsb2NhdGlvbnMgb2Ygc2luZ2xlIG9jY3VwYW5j
eSBiYXRocm9vbXMgb24gY2FtcHVzLCBwbGVhc2UgY2xpY2sgaGVyZS4gVGhlIEVxdWFs
IE9wcG9ydHVuaXR5IGFuZCBDb21wbGlhbmNlIE9mZmljZSBhbmQgdGhlIExHQlRRIENl
bnRlciBhcmUgYWxzbyBhdmFpbGFibGUgdG8gcHJvdmlkZSBhc3Npc3RhbmNlLg0KDQpT
aW5jZXJlbHksDQoNCkNhcm9sIEwuIEZvbHQNCkNoYW5jZWxsb3INCg0KSmFtZXMgVy4g
RGVhbiwgSnIuDQpFeGVjdXRpdmUgVmljZSBDaGFuY2VsbG9yIGFuZCBQcm92b3N0DQoN
CldpbnN0b24gQ3Jpc3ANClZpY2UgQ2hhbmNlbGxvciBmb3IgU3R1ZGVudCBBZmZhaXJz
DQoNCkZlbGljaWEgQS4gV2FzaGluZ3Rvbg0KVmljZSBDaGFuY2VsbG9yIGZvciBXb3Jr
Zm9yY2UgU3RyYXRlZ3ksIEVxdWl0eSBhbmQgRW5nYWdlbWVudA0KDQrCoA0KDQpUaGlz
IG1lc3NhZ2UgaXMgc3BvbnNvcmVkIGJ5OiBPZmZpY2Ugb2YgdGhlIENoYW5jZWxsb3I=