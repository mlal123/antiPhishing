VG86wqAgwqDCoMKgwqDCoMKgIMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgVW5p
dmVyc2l0eSBFbXBsb3llZXMNCg0KRnJvbTogwqDCoCDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIFBheXJvbGwgU2VydmljZXMgYW5kIFRJTSBTdXBwb3J0DQoNCkRhdGU6
IMKgwqDCoCDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIE9jdG9iZXIgMTQsIDIw
MTYNCg0KU3ViamVjdDogwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBUSU0gVXBn
cmFkZSBPdXRhZ2UgT2N0LiAyMXN0IOKAkyBPY3QuIDIzcmQNCg0KwqANCg0KSW4gYWR2
YW5jZSBvZiB0aGUgVW5pdmVyc2l0eeKAmXMgVGltZSBJbmZvcm1hdGlvbiBNYW5hZ2Vt
ZW50IChUSU0pIHN5c3RlbSB1cGdyYWRlLCBhIFRJTSBvdXRhZ2Ugd2lsbCBvY2N1ciBi
ZWdpbm5pbmcgRnJpZGF5LCBPY3QuIDIxLiBUaGUgc3lzdGVtIHdpbGwgYmUgZG93biBm
cm9tIDUgcC5tLiwgRnJpZGF5LCBPY3QuIDIxIHVudGlsIDExIHAubS4sIFN1bmRheSwg
T2N0LiAyMyBhdCB0aGUgbGF0ZXN0Lg0KDQoqVGhlIGFjdGlvbnMgdGhhdCB5b3UgZG8g
aW4gVElNIHRvZGF5IGFuZCB0aGUgd2F5IHlvdSBhY2Nlc3MgVElNIHdpbGwgcmVtYWlu
IHRoZSBzYW1lLirCoA0KDQpEdXJpbmcgdGhlIG91dGFnZQ0KDQpFbXBsb3llZXMgdXNp
bmcgVGltZSBTdGFtcCB3aWxsIG5vdCBiZSBhYmxlIHRvIGxvZ2luIHRvIFRJTSB0byBy
ZWNvcmQgdGhlaXIgdGltZXMgd29ya2VkLg0KDQoqQWxsIHRpbWVzIGluIGFuZCBvdXQg
d29ya2VkIGR1cmluZyB0aGUgb3V0YWdlIHdpbmRvdyBtdXN0IGJlIHN1Ym1pdHRlZCB0
byB0aGUgVElNIE1hbmFnZXIgb3IgVElNIEFkbWluaXN0cmF0b3IgZm9yIG1hbnVhbCBl
bnRyeSBvbiBNb25kYXksIE9jdC4gMjQuKg0KDQpFbXBsb3llZXMgdXNpbmcgQmFkZ2Ug
VGVybWluYWxzIHdpbGwgYmUgYWJsZSB0byBzd2lwZSBpbiBhbmQgb3V0IGZvciB3b3Jr
ZWQgaG91cnMgZHVyaW5nIHRoZSBvdXRhZ2UuIEZ1bmN0aW9ucyBzdWNoIGFzIFZpZXcg
VGltZWNhcmQgVG90YWxzLCBWaWV3IEFjY3J1YWwgQmFsYW5jZXMsIGFuZCBUaW1lIE9m
ZiBOb3RpZmljYXRpb25zIHdpbGwgbm90IGJlIGF2YWlsYWJsZSBkdXJpbmcgdGhlIG91
dGFnZSBwZXJpb2QuDQoNCipUaW1lcyBpbiBhbmQgb3V0IHNob3VsZCBiZSBjaGVja2Vk
IGJ5IHRoZSBUSU0gTWFuYWdlciBvciBUSU0gQWRtaW5pc3RyYXRvciBvbiBNb25kYXks
IE9jdC4gMjQgdG8gZW5zdXJlIHRoZXkgYXJlIGNvcnJlY3QuKg0KDQpFbXBsb3llZXMg
dXNpbmcgVGVsZXRpbWUgd2lsbCBub3QgYmUgYWJsZSB0byBjYWxsIGluIHRvIHRoZSBw
aG9uZSBzeXN0ZW0gdG8gcmVjb3JkIHRpbWVzIHdvcmtlZCBkdXJpbmcgdGhlIGV4dGVu
ZGVkIFRlbGV0aW1lIG91dGFnZSB3aW5kb3cuDQoNCipBbGwgdGltZXMgaW4gYW5kIG91
dCB3b3JrZWQgZHVyaW5nIHRoZSBvdXRhZ2Ugd2luZG93IG11c3QgYmUgc3VibWl0dGVk
IHRvIHRoZSBUSU0gTWFuYWdlciBvciBUSU0gQWRtaW5pc3RyYXRvciBmb3IgbWFudWFs
IGVudHJ5IG9uIE1vbmRheSwgT2N0LiAyNC4qDQoNClNIUkEgTm9uLUV4ZW1wdCBFbXBs
b3llZXMgdXNpbmcgTWFudWFsIFRpbWUgRW50cnkgYW5kIFNIUkEgYW5kIEVIUkEgRXhl
bXB0IGVtcGxveWVlcyB3aWxsIG5vdCBiZSBhYmxlIHRvIGxvZyBpbnRvIHRoZSBUSU0g
c3lzdGVtIGR1cmluZyB0aGUgb3V0YWdlIHdpbmRvdy4NCg0KKlNIUkEgTm9uLUV4ZW1w
dCBhbmQgU0hSQSBhbmQgRUhSQSBFeGVtcHQgZW1wbG95ZWVzIHdpbGwgYmUgYWJsZSB0
byBlbnRlciBhbGwgb2YgdGhlaXIgVElNIGRhdGEgb24gTW9uZGF5LCBPY3QuIDI0LioN
Cg0KVElNIGFjY2Vzcw0KDQpXaGVuIGVtcGxveWVlcyBsb2cgaW4gdG8gVElNIG9uIE1v
bmRheSwgT2N0LiAyNCwgdGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgcm91dGVkIHRv
IHRoZSB1cGdyYWRlZCB2ZXJzaW9uIG9mIFRJTS7CoCBFbXBsb3llZXMgd2lsbCB1c2Ug
dGhlIGN1cnJlbnQgYWNjZXNzIG1ldGhvZHM6wqAgZGlyZWN0bHkgb3IgdmlhIHRoZSBT
ZWxmIFNlcnZpY2UgbWVudSBvbiB0aGUgQ29ubmVjdENhcm9saW5hIGhvbWUgcGFnZS4N
Cg0KQWZ0ZXIgbG9nZ2luZyBpbiBmb3IgdGhlIGZpcnN0IHRpbWUgdG8gdGhlIHVwZ3Jh
ZGVkIHZlcnNpb24gb2YgVElNIG9uIE1vbmRheSwgT2N0LiAyNCwgZW1wbG95ZWVzIG1h
eSBiZSBwcm9tcHRlZCB0byBkb3dubG9hZCB0aGUgQWRvYmUgRmxhc2ggUGxheWVyLsKg
IElmIHlvdSBhcmUgdW5hYmxlIHRvIGRvd25sb2FkIHRoZSBzb2Z0d2FyZSwgY29udGFj
dCB5b3VyIGRlcGFydG1lbnTigJlzIElUIHN1cHBvcnQgc3RhZmYgb3IgdGhlIEhlbHAg
RGVzayBhdCA5NjItSEVMUCAoNDM1NykuDQoNClVwZ3JhZGUgc3VwcG9ydA0KDQpQbGVh
c2UgY29udGFjdCA5NjItSEVMUCAoNDM1NykgZm9yIGFzc2lzdGFuY2Ugd2l0aCBhbGwg
dGVjaG5pY2FsIGlzc3VlcyByZWxhdGVkIHRvIFRJTS4NCg0KV2UgYXBwcmVjaWF0ZSB5
b3VyIHBhdGllbmNlIG9uIHRoaXMgaW1wb3J0YW50IHJvbGxvdXQgb2YgYW4gdXBncmFk
ZWQgVElNIGFwcGxpY2F0aW9uLg0KDQpUaGlzIG1lc3NhZ2UgaXMgc3BvbnNvcmVkIGJ5
OiBQYXlyb2xsIFNlcnZpY2Vz