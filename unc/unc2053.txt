DQpEZWFyIENhbXB1cyBDb21tdW5pdHk6DQoNCkkgYW0gcGxlYXNlZCB0byBhbm5vdW5j
ZSB0aGF0IE1hcmsgTWVycml0dCBoYXMgYmVlbiBuYW1lZCB2aWNlIGNoYW5jZWxsb3Ig
YW5kIGdlbmVyYWwgY291bnNlbCBmb3IgdGhlIFVuaXZlcnNpdHkuIFRoZSBhcHBvaW50
bWVudCwgZWZmZWN0aXZlIFNlcHRlbWJlciA2LCB3YXMgYXBwcm92ZWQgYnkgdGhlIFVu
aXZlcnNpdHnigJlzIEJvYXJkIG9mIFRydXN0ZWVzLg0KDQpDdXJyZW50bHkgYSBwYXJ0
bmVyIGF0IHRoZSBDaGFybG90dGUgbGF3IGZpcm0gUm9iaW5zb24gQnJhZHNoYXcsIE1y
LiBNZXJyaXR0IHdhcyBjaG9zZW4gYWZ0ZXIgYW4gZXh0ZW5zaXZlIG5hdGlvbndpZGUg
c2VhcmNoLsKgDQoNCkkgYW0gZXh0cmVtZWx5IHBsZWFzZWQgdG8gaGF2ZSBvbmUgb2Yg
dGhlIGJlc3QgYXR0b3JuZXlzIGluIE5vcnRoIENhcm9saW5hIGpvaW5pbmcgbXkgbGVh
ZGVyc2hpcCB0ZWFtLiBIaXMgbGVnYWwgZXhwZXJ0aXNlIGFuZCB3ZWxsLXJlZ2FyZGVk
IGNvdW5zZWwgYXJlIG9ubHkgc3VycGFzc2VkIGJ5IGhpcyBsb3ZlIGFuZCBwYXNzaW9u
IGZvciBDYXJvbGluYSBhbmQgaGUgaXMgd2VsbC1wcmVwYXJlZCB0byBoZWxwIHVzIGxl
YWQgdGhlIFVuaXZlcnNpdHkuDQoNCk1yLiBNZXJyaXR0IGlzIGN1cnJlbnRseSBwcmVz
aWRlbnQtZWxlY3Qgb2YgdGhlIE5vcnRoIENhcm9saW5hIFN0YXRlIEJhciBhbmQgYW4g
YWNjb21wbGlzaGVkIHRyaWFsIGF0dG9ybmV5LiBIaXMgbWFueSBhY2NvbGFkZXMgaW5j
bHVkZSBiZWluZyBuYW1lZCB0byB0aGUgV29vZHdhcmQvV2hpdGUsIEluYy4g4oCcVGhl
IEJlc3QgTGF3eWVycyBpbiBBbWVyaWNh4oCdIGxpc3QsIHNlbGVjdGlvbiBieSBCdXNp
bmVzcyBOb3J0aCBDYXJvbGluYSBmb3IgdGhlIHB1YmxpY2F0aW9u4oCZcyBMZWdhbCBF
bGl0ZSBIYWxsIG9mIEZhbWUsIGVhcm5pbmcgdGhlIDIwMTIgdGhlIE5vcnRoIENhcm9s
aW5hIEJhciBBc3NvY2lhdGlvbuKAmXMgSC4gQnJlbnQgTWNLbmlnaHQgUmVuYWlzc2Fu
Y2UgTGF3eWVyIEF3YXJkIGFuZCBiZWluZyBuYW1lZCBhcyBhIEZlbGxvdyBvZiBib3Ro
IHRoZSBBbWVyaWNhbiBDb2xsZWdlIG9mIFRyaWFsIExhd3llcnMgYW5kIHRoZSBJbnRl
cm5hdGlvbmFsIFNvY2lldHkgb2YgQmFycmlzdGVycy4NCg0KTXIuIE1lcnJpdHQgc3Vj
Y2VlZHMgRGF2aWQgUGFya2VyLCB3aG8gaGFzIHNlcnZlZCBhcyBpbnRlcmltIGdlbmVy
YWwgY291bnNlbCBzaW5jZSBKYW51YXJ5IDIwMTUgYW5kIHdpbGwgY29udGludWUgaW4g
aGlzIGludGVyaW0gY2FwYWNpdHkgdW50aWwgTXIuIE1lcnJpdHQgYXNzdW1lcyB0aGUg
aGVsbS4gTXIuIFBhcmtlciBpcyByZXRpcmluZyBhZnRlciAyMiB5ZWFycyBvZiBzZXJ2
aWNlIGluIHZhcmlvdXMgbGVnYWwgY2FwYWNpdGllcyBhdCB0aGUgVW5pdmVyc2l0eS4N
Cg0KTXIuIE1lcnJpdHQgd2lsbCBzZXJ2ZSBhcyBDYXJvbGluYeKAmXMgY2hpZWYgbGVn
YWwgb2ZmaWNlciBhbmQgcHJvdmlkZSBsZWdhbCBhZHZpY2UgYW5kIGNvdW5zZWwgdG8g
dGhlIEJvYXJkIG9mIFRydXN0ZWVzLCBtZSwgdGhlIGFkbWluaXN0cmF0aW9uLCBmYWN1
bHR5LCBhbmQgc3RhZmYgb24gbGVnYWwgbWF0dGVycyBpbnZvbHZpbmcgb3IgYWZmZWN0
aW5nIHRoZSBpbnN0aXR1dGlvbiwgYXMgd2VsbCBhcyBkaXJlY3Qgb3V0c2lkZSBjb3Vu
c2VsIG9uIGFsbCBjYXNlcyBhbmQgaXNzdWVzLiBBcyBjaGllZiBsZWdhbCBvZmZpY2Vy
LCBNci4gTWVycml0dCB3aWxsIHNlcnZlIGFzIGEgbGlhaXNvbiB3aXRoIHRoZSBPZmZp
Y2Ugb2YgdGhlIFByZXNpZGVudCBvZiB0aGUgVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJv
bGluYSBzeXN0ZW0sIHRoZSBzdGF0ZSBBdHRvcm5leSBHZW5lcmFsJ3MgT2ZmaWNlIGFu
ZCBvdGhlciBhdXRob3JpdGllcyBvbiBsZWdhbCBpc3N1ZXMuDQoNCk1yLiBNZXJyaXR0
IGhhcyBzdHJvbmcgdGllcyB0byB0aGUgVW5pdmVyc2l0eS4gQSBNb3JlaGVhZCBTY2hv
bGFyIChub3cgTW9yZWhlYWQtQ2FpbiksIGhlIGdyYWR1YXRlZCB3aXRoIGEgZGVncmVl
IGluIEVjb25vbWljcyBhbmQgUG9saXRpY2FsIFNjaWVuY2UgaW4gMTk3OSBhbmQgaGFz
IHNlcnZlZCBhcyBhIG1lbWJlciBvZiB0aGUgTW9yZWhlYWQtQ2FpbiBTY2hvbGFyc2hp
cCBDZW50cmFsIFNlbGVjdGlvbiBDb21taXR0ZWUuIEhlIGVhcm5lZCBoaXMgbGF3IGRl
Z3JlZSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhLCB3aGVyZSBoZSB3YXMg
ZWRpdG9yLWluLWNoaWVmIG9mIHRoZSBMYXcgUmV2aWV3LiBIaXMgd2lmZSBhbmQgdHdv
IGNoaWxkcmVuIGFyZSBVTkMgYWx1bW5pIGFuZCBoaXMgeW91bmdlc3QgY2hpbGQgaXMg
YSBjdXJyZW50IHN0dWRlbnQuDQoNCk1yLiBNZXJyaXR0IGhhcyBzcGVudCB0aGUgbGFz
dCAzMyB5ZWFycyBhdCBSb2JpbnNvbiBCcmFkc2hhdywgd2hlcmUgaGUgaXMgb25lIG9m
IHRoZSBmaXJt4oCZcyB0b3AgbGl0aWdhdG9ycywgc3BlY2lhbGl6aW5nIGluIGEgYnJv
YWQgcmFuZ2Ugb2YgYnVzaW5lc3MtcmVsYXRlZCBsaXRpZ2F0aW9uIGluY2x1ZGluZyBh
bnRpdHJ1c3QsIGNvbXBsZXgsIGNsYXNzIGFjdGlvbiwgYW5kIHNoYXJlaG9sZGVyIGlz
c3Vlcy4NCg0KSSB3b3VsZCBsaWtlIHRvIHRoYW5rIHRoZSBzZWFyY2ggY29tbWl0dGVl
LCBsZWQgYnkgRmVsaWNpYSBBLiBXYXNoaW5ndG9uLCB2aWNlIGNoYW5jZWxsb3IgZm9y
IHdvcmtmb3JjZSBzdHJhdGVneSwgZXF1aXR5IGFuZCBlbmdhZ2VtZW50OiBCb2IgQmxv
dWluLCBkZWFuIGFuZCBWYXVnaG4gYW5kIE5hbmN5IEJyeXNvbiBEaXN0aW5ndWlzaGVk
IFByb2Zlc3NvciwgRXNoZWxtYW4gU2Nob29sIG9mIFBoYXJtYWN5OyBkaXJlY3Rvciwg
RXNoZWxtYW4gSW5zdGl0dXRlIGZvciBJbm5vdmF0aW9uOyBNYXJ0aW4gQnJpbmtsZXks
IGRlYW4gYW5kIHByb2Zlc3NvciwgU2Nob29sIG9mIExhdzsgSmVmZiBCcm93biwgQm9h
cmQgb2YgVHJ1c3RlZXM7IEp1bGllIEJ5ZXJsZXksIHZpY2UgZGVhbiBmb3IgZWR1Y2F0
aW9uLCBjaGllZiBlZHVjYXRpb24gb2ZmaWNlciwgVU5DIFNjaG9vbCBvZiBNZWRpY2lu
ZTsgTG93cnkgQ2F1ZGlsbCwgQm9hcmQgb2YgVHJ1c3RlZXM7IEp1ZGl0aCBDb25lLCB2
aWNlIGNoYW5jZWxsb3IsIGNvbW1lcmNpYWxpemF0aW9uIGFuZCBlY29ub21pYyBkZXZl
bG9wbWVudDsgYW5kIERvbiBIb2JhcnQsIGFzc29jaWF0ZSB2aWNlIGNoYW5jZWxsb3Ig
Zm9yIHJlc2VhcmNoLg0KDQpJIHdvdWxkIGFsc28gbGlrZSB0byB0aGFuayBEYXZpZCBh
bmQgdGhlIGVudGlyZSB0ZWFtIGF0IHRoZSBPZmZpY2Ugb2YgVW5pdmVyc2l0eSBDb3Vu
c2VsIGZvciB0aGVpciBjb21taXRtZW50IGFuZCBkZWRpY2F0aW9uIGR1cmluZyB0aGlz
IHBlcmlvZC4gVGhleSBoYXZlIGNvbmR1Y3RlZCB0aGVpciB3b3JrIHdpdGggdGhlIGhp
Z2hlc3QgZGVncmVlIG9mIHByb2Zlc3Npb25hbGlzbSBhbmQgbGVnYWwgYWN1bWVuLCBh
bmQgb3VyIG5ldyB2aWNlIGNoYW5jZWxsb3IgYW5kIGdlbmVyYWwgY291bnNlbCB3aWxs
IGluaGVyaXQgYW4gb3V0c3RhbmRpbmcgdGVhbS4NCg0KUGxlYXNlIGpvaW4gbWUgaW4g
Y29uZ3JhdHVsYXRpbmcgTWFyayBvbiBoaXMgbmV3IHJvbGUgYW5kIHRoYW5raW5nIERh
dmlkIGZvciBoaXMgbG9uZyBhbmQgZXhlbXBsYXJ5IHNlcnZpY2UgdG8gdGhlIFVuaXZl
cnNpdHkuDQoNClNpbmNlcmVseSwNCg0KQ2Fyb2wgTC4gRm9sdA0KQ2hhbmNlbGxvcsKg
DQoNClRoaXMgbWVzc2FnZSBpcyBzcG9uc29yZWQgYnk6IE9mZmljZSBvZiB0aGUgQ2hh
bmNlbGxvcg==