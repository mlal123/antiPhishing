wqANCg0KSG9tZWdyb3duIEhhbGxvd2VlbiAyMDE3DQoNClRoZSBUb3duIG9mIENoYXBl
bCBIaWxsIGFudGljaXBhdGVzIHRob3VzYW5kcyBvZiBwZW9wbGUgdmlzaXRpbmcgZG93
bnRvd24gb24gVHVlc2RheSwgT2N0b2JlciAzMSwgMjAxNywgZm9yIGl0cyBhbm51YWwg
SG9tZWdyb3duIEhhbGxvd2VlbiBldmVudC4gVGhlIGV2ZW50IHdpbGwgcnVuIGZyb20g
ODowMCBwLm0uIHVudGlsIDEwOjMwIHAubS7CoA0KDQpXaGVuIHNvIG1hbnkgcGVvcGxl
IGFyZSBnYXRoZXJlZCBpbiBhIGNvbmNlbnRyYXRlZCBhcmVhLCB0aGUgc2FmZXR5IGFu
ZCBzZWN1cml0eSBvZiBVTkMtQ0ggc3R1ZGVudHMgaXMgb3VyIHByaW1hcnkgY29uY2Vy
bi4gUGxlYXNlIHRha2Ugbm90ZSBvZiB0aGUgZm9sbG93aW5nIHNhZmV0eSBpbmZvcm1h
dGlvbi4NCg0KUHJvaGliaXRlZCBJdGVtczoNCg0KUHVibGljIGNvbnN1bXB0aW9uIG9m
IGFsY29ob2wgaXMgcHJvaGliaXRlZCBhbmQgdW5vcGVuZWQgY29udGFpbmVycyB3aWxs
IG5vdCBiZSBhbGxvd2VkIGludG8gdGhlIGFyZWEgb2YgZG93bnRvd24gdGhhdCB3aWxs
IGJlIGNsb3NlZC7CoEFsbCBvdGhlciBzdGF0ZSBhbmQgbG9jYWwgbGF3cyBwZXJ0YWlu
aW5nIHRvIGFsY29ob2wgd2lsbCBiZSBlbmZvcmNlZCBhcyB1c3VhbC4NCklmIGFsY29o
b2wgaXMgY29uc3VtZWQgcHJpb3IgdG8gYXR0ZW5kaW5nIHRoZSBldmVudCwgbGltaXQg
aW50YWtlIHNvIHRvIHJlbWFpbiBhbGVydCBhbmQgaW4gY29udHJvbCBhdCBhbGwgdGlt
ZXMgd2hpbGUgYW1pZCB0aGUgY3Jvd2RzIG9mIHBlb3BsZS4NClRvd24gb3JkaW5hbmNl
cyBhbmQgU3RhdGUgc3RhdHV0ZXMgcHJvaGliaXQgdGhlIGZvbGxvd2luZyBpdGVtcyBp
biB0aGUgY2xvc2VkIGFyZWE6DQoNCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgQWxjb2hvbGljIEJldmVyYWdlc8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFdlYXBvbnMgb2YgYW55
IGtpbmQNCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgR2xhc3MgQm90
dGxlc8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIFBhaW50DQrCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIEZpcmV3b3JrcyBhbmQgRXhwbG9z
aXZlc8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBGbGFt
bWFibGUgU3Vic3RhbmNlcw0KwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oCBMaXZlIEFuaW1hbHPCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBD
b29sZXJzDQoNCkl0ZW1zLCBldmVuIGFzIHBhcnQgb2YgYSBjb3N0dW1lLCB3aGljaCBj
YW4gYmUgdXNlZCBhcyB3ZWFwb25zIG9yIGNvdWxkIHJlYXNvbmFibHkgYmUgbWlzdGFr
ZW4gYXMgd2VhcG9ucywgd2lsbCBiZSBjb25maXNjYXRlZC4gVGhpcyBpbmNsdWRlcyBp
dGVtcyBtYWRlIG9mIHdvb2QsIG1ldGFsLCBjYXJkYm9hcmQgb3IgaGFyZCBwbGFzdGlj
Lg0KSWYgeW91IG9yIHNvbWVvbmUgeW91IGtub3cgZXhwZXJpZW5jZXMgaW5qdXJ5IG9y
IGRpc3RyZXNzIGR1cmluZyB0aGUgZXZlbnQsIHlvdSBjYW4gY29udGFjdCBvbmUgb2Yg
dGhlIGh1bmRyZWRzIG9mIHVuaWZvcm1lZCBwb2xpY2Ugb2ZmaWNlcnMgdGhhdCB3aWxs
IGJlIG9uIGhhbmQgZm9yIHRoZSBldmVudCwgYWNjZXNzIHRoZSBFTVMgc3RhdGlvbiBh
dCBIaWxsIEhhbGwsIG9yIGNhbGwgOTExIGZvciByZXNwb25zZS4gVGhlIE5DIOKAnEdv
b2QgU2FtYXJpdGFu4oCdIExhdyBhbmQgVU5D4oCZcyBBbGNvaG9sIFBvbGljeSBib3Ro
IGVuY291cmFnZSBpbmRpdmlkdWFscyB0byBzZWVrIG1lZGljYWwgY2FyZSB3aXRob3V0
IGFkZGVkIGZlYXIgb2YgbGVnYWwgb3IgZGlzY2lwbGluYXJ5IHJlcGVyY3Vzc2lvbnMu
DQoNClJlc2lkZW5jZSBIYWxscyBhbmQgT2ZmIENhbXB1cyBIb21lczogwqANCg0KVGhl
cmUgd2lsbCBiZSBhbiBpbmNyZWFzZWQgbnVtYmVyIG9mIG5vbi1zdHVkZW50IHZpc2l0
b3JzIHRvIHRoZSBhcmVhLiBJdCBpcyBpbXBvcnRhbnQgdGhhdCBzdHVkZW50cyBlbnN1
cmUgdGhlaXIgaG9tZXMgYW5kIGNhcnMgYXJlIHNlY3VyZWQgYXQgYWxsIHRpbWVzLiDC
oEZvciByZXNpZGVuY2UgaGFsbHMsIGl0IGlzIGltcGVyYXRpdmUgdGhhdCBzdHVkZW50
cyBhdm9pZCDigJx0YWlsZ2F0aW5n4oCdIG9yIGxldHRpbmcgbm9uLXJlc2lkZW50cyBp
bnRvIHRoZSBoYWxscy7CoCBUaGlzIGlzIHBhcnRpY3VsYXJseSBpbXBvcnRhbnQgZHVl
IHRvIHRoZSBsYXJnZXIgbnVtYmVyIG9mIGNvc3R1bWVkIGFuZCBwb3RlbnRpYWxseSBu
b24taWRlbnRpZmlhYmxlIHBlb3BsZSB0aGF0IHdpbGwgYmUgb24gYW5kIGFyb3VuZCBj
YW1wdXMgSGFsbG93ZWVuIGV2ZW5pbmcuIMKgwqBXZSBjYW4gYWxsIHdvcmsgdG8gZGVj
cmVhc2UgdGhlIG9wcG9ydHVuaXR5IGZvciBjcmltZSBhbmQgcHJvcGVydHkgZGFtYWdl
IHRoYXQgY2FuIG9jY3VyIGF0IHN1Y2ggdGltZXMuIEFzIHlvdSBjb21lIGFuZCBnbyBm
cm9tIHlvdXIgaG9tZSwgeW91IGFyZSByZXNwb25zaWJsZSBmb3IgeW91ciBjaG9pY2Vz
IGFuZCBiZWhhdmlvcnMsIGFzIHdlbGwgYXMgYW55IHZpc2l0aW5nIGd1ZXN0cyB5b3Ug
bWF5IGhhdmUuDQoNCkZvciBvZmYtY2FtcHVzIHJlc2lkZW50cyBsaXZpbmcgbmVhciBk
b3dudG93biwgYmUgYXdhcmUgdGhhdCB0cmFmZmljIGFuZCBwYXJraW5nIG1heSBiZSBy
ZXN0cmljdGVkIGluIGFuZCBhcm91bmQgeW91ciBuZWlnaGJvcmhvb2QuwqAgSWxsZWdh
bGx5IHBhcmtlZCB2ZWhpY2xlcyBhcmUgc3ViamVjdCB0byBiZWluZyB0aWNrZXRlZCBh
bmQgdG93ZWQuDQoNCkZvb2QgVHJ1Y2sgUm9kZW86DQoNClRoZSBEZXBhcnRtZW50IG9m
IEhvdXNpbmcgYW5kIFJlc2lkZW50aWFsIEVkdWNhdGlvbiwgRmlyc3QtWWVhciBFeHBl
cmllbmNlLCBTdHVkZW50IFdlbGxuZXNzLCBSSEEsIENhcm9saW5hIERpbmluZyBTZXJ2
aWNlcywgYW5kIFdhc3RlIFJlZHVjdGlvbiBhbmQgUmVjeWNsaW5nIFNlcnZpY2VzIGFy
ZSBjb2xsYWJvcmF0aW5nIHRvIGJyaW5nIHlvdSBhIEZvb2QgVHJ1Y2sgUm9kZW8gb24g
Y2FtcHVzIEhhbGxvd2VlbiBOaWdodC4gVGhpcyBldmVudCBvZmZlcnMgc3R1ZGVudHMg
dGhlIG9wcG9ydHVuaXR5IHRvIGVuam95IHNvbWUgdGFzdHkgZm9vZCBvcHRpb25zIGFu
ZCB0byBmb3N0ZXIgYSBzYWZlciBIYWxsb3dlZW4gZXhwZXJpZW5jZS4gTmluZSBsb2Nh
bCBmb29kIHRydWNrcyB3aWxsIGJlIGF2YWlsYWJsZSBhbG9uZyBTdGFkaXVtIERyaXZl
IG5lYXIgU291dGggUm9hZC4gRWFjaCB0cnVjayB3aXRoIGhhdmUgYSAkNS4wMCBmb29k
IG9wdGlvbiBhbmQgd2lsbCBiZSBhY2NlcHRpbmcgY3JlZGl0IGNhcmRzICYgY2FzaC4g
VGhlIGZpcnN0IDE1MCBzdHVkZW50cyB0byBhdHRlbmQgdGhlIGV2ZW50IHdpbGwgcmVj
ZWl2ZSBhIHZvdWNoZXIgZm9yIGEgZnJlZSAkNS4wMCBvcHRpb24gZnJvbSBhbnkgb2Yg
dGhlIGZvb2QgdHJ1Y2tzIHRoYXQgZXZlbmluZy7CoCBGb29kIHNlcnZpY2UgYmVnaW5z
IGF0IDEwOjAwIHAubS4NCg0KVU5DIFRyYW5zcG9ydGF0aW9uIGFuZCBQYXJraW5nIElu
Zm9ybWF0aW9uOg0KDQpDYW1wdXMgcGFya2luZyBwZXJtaXQgcmVndWxhdGlvbnMgYXJl
IGluIGVmZmVjdCBmcm9tIDc6MzAgYS5tLiBUdWVzZGF5LCBPY3RvYmVyIDMxIHRocnUg
MjowMCBhLm0uIG9uIFdlZG5lc2RheSwgTm92ZW1iZXIgMSBpbiBhbGwgd2Vla2RheSBw
ZXJtaXR0ZWQgbG90cy4gVmFsaWQgd2Vla2RheSBwZXJtaXRzIGZvciB0aGUgbG90IG11
c3QgYmUgZGlzcGxheWVkIHRvIGFjY2VzcyB0aGUgcGFya2luZyBhcmVhcyBkdXJpbmcg
dGhpcyB0aW1lIGZyYW1lLg0KDQpTb21lIGxvdHMgd2lsbCBub3QgYmUgYXZhaWxhYmxl
IGFmdGVyIDUgcC5tLiBvciA4IHAubS4gYmFzZWQgb24gcm9hZCBjbG9zdXJlcyBvciBl
dmVudCBvcGVyYXRpb24gbmVlZHMuIEFjY2VzcyB0byB0aGUgVU5DIGNhbXB1cyBhbmQg
ZG93bnRvd24vc3Vycm91bmRpbmcgbmVpZ2hib3Job29kcyBpcyByZXN0cmljdGVkIG9y
IGRpdmVydGVkIGF0IHNldmVyYWwga2V5IGxvY2F0aW9ucy4gQ2FtZXJvbiBBdmVudWUg
YW5kIEZyYW5rbGluIEF2ZW51ZSB3aWxsIGJvdGggYmUgY2xvc2VkIGJlZ2lubmluZyBh
dCA4OjAwIHAubS4gZnJvbSBDb2x1bWJpYSBTdHJlZXQgdG8gUmFsZWlnaCBTdHJlZXQu
IEEgZnVsbCBsaXN0IG9mIGNoYW5nZXMgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vbW92
ZS51bmMuZWR1L25ld3MvMjAxNy8xMC8yMy9ob21lZ3Jvd24taGFsbG93ZWVuLTIwMTcv
Lg0KDQpUcmFuc2l0DQoNCkxvY2FsIGFuZCBSZWdpb25hbCB0cmFuc2l0IHNlcnZpY2Vz
IG1heSBiZSBhbHRlcmVkIHRvIGFjY29tbW9kYXRlIEhvbWVncm93biBIYWxsb3dlZW4g
cm9hZCBjbG9zdXJlcy4gQWxsIHJpZGVycyBtdXN0IGFkaGVyZSB0byBydWxlcyBhbmQg
cG9saWNlcyBhc3NvY2lhdGVkIHdpdGggcmlkaW5nIGNhbXB1cyBhbmQgbG9jYWwgdHJh
bnNpdCBzZXJ2aWNlcyBzYWZlbHkuIFNlZSBsaW5rcyB0byBIYWxsb3dlZW4gcm91dGUg
bW9kaWZpY2F0aW9uczoNCg0KQ2hhcGVsIEhpbGwgVHJhbnNpdCAvIFNhZmUgUmlkZSBS
b3V0ZQ0KDQpHb1RyaWFuZ2xlwqBSb3V0ZSA0MDANCg0KUm9iZXJ0c29uIFNjaG9sYXIg
RXhwcmVzcyAoUlNYKcKg4oCTIFNlcnZpY2Ugd2lsbCBlbmQgZWFybHkgd2l0aCB0aGUg
bGFzdCBidXMgZGVwYXJ0aW5nIFVOQyBhdCA1OjAwIHAubS4gYW5kwqBEdWtlIGF0IDQ6
MzAgcC5tLg0KU2FmZSBSaWRlcyB3aWxsIG9wZXJhdGUuDQoNClF1ZXN0aW9uczogUGxl
YXNlIGNvbnRhY3QgYSBDSFQgY3VzdG9tZXIgc2VydmljZSByZXByZXNlbnRhdGl2ZSBh
dCA5MTktOTY5LTQ5MDAgKHByZXNzIDEpIG9yIGVtYWlsIGNodHJhbnNpdEB0b3dub2Zj
aGFwZWxoaWxsLm9yZy4NCg0KVGhpcyBtZXNzYWdlIGlzIHNwb25zb3JlZCBieTogT2Zm
aWNlIG9mIHRoZSBWaWNlIENoYW5jZWxsb3IgZm9yIFN0dWRlbnQgQWZmYWlycw==