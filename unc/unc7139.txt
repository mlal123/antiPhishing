SGkgQnVzaS1UZWNoIG1lbWJlcnMsDQoNClBsZWFzZSBzZWUgdGhlIGluZm9ybWF0aW9uIGJlbG93
IGFib3V0IGFuIGV4Y2l0aW5nIG9wcG9ydHVuaXR5IHRvIHNpZ24gdXAgZm9yIHRoZSBVTkMgR2Ft
aW5nIENvbmZlcmVuY2U6IFRoZSBCdXNpbmVzcyBvZiBQbGF5LiBJdCBpcyBzcG9uc29yZWQgYnkg
dGhlIE1CQSB2ZXJzaW9uIG9mIG91ciBjbHViLCBhbmQgdGhlIHByZXNpZGVudCBvZiB0aGF0IGNs
dWIgd2FzIGtpbmQgZW5vdWdoIHRvIGxldCB1cyBqb2luLiBEb27igJl0IG1pc3Mgb3V0IG9uIHRo
ZSBvcHBvcnR1bml0eSBhcyBzcGFjZSBpcyBsaW1pdGVkLg0KDQpIYXZlIGEgZ3JlYXQgcmVzdCBv
ZiB5b3VyIHdlZWtlbmQhDQoNCkJlc3QsDQoNCkt1YW5mdSBDaGVuDQpVbml2ZXJzaXR5IG9mIE5v
cnRoIENhcm9saW5hIGF0IENoYXBlbCBIaWxsIHwgS2VuYW4tRmxhZ2xlciBCdXNpbmVzcyBTY2hv
b2wgfCBDbGFzcyBvZiAyMDE4DQpCLlMuIEJ1c2luZXNzIEFkbWluaXN0cmF0aW9uIHwgQ2hpbmVz
ZSBNaW5vcg0KS3VhbmZ1X0NoZW5Aa2VuYW4tZmxhZ2xlci51bmMuZWR1PG1haWx0bzpLdWFuZnVf
Q2hlbkBrZW5hbi1mbGFnbGVyLnVuYy5lZHU+IHwgKDkxOSkgODAwLTg2ODgNCg0KQmVnaW4gZm9y
d2FyZGVkIG1lc3NhZ2U6DQoNClN1YmplY3Q6IFVOQyBHYW1pbmcgQ29uZmVyZW5jZTogVGhlIEJ1
c2luZXNzIG9mIFBsYXkNCldoZW46IEZyaWRheSwgTm92ZW1iZXIgMTAsIDIwMTcgOTowMCBBTS0x
OjAwIFBNIChVVEMtMDU6MDApIEVhc3Rlcm4gVGltZSAoVVMgJiBDYW5hZGEpLg0KV2hlcmU6IEtl
bmFuIENlbnRlciAyMDQNCg0KV2hldGhlciB5b3Ugd2FudCB0byB3b3JrIGluIGdhbWluZyBvciBh
cmUganVzdCBhIGdhbWVyIGF0IGhlYXJ0LCB0aGlzIGNvbmZlcmVuY2UgaXMgYW4gZXBpYyB3aW4u
IEFyZSB5b3UgaW50ZXJlc3RlZCBpbiBBSSwgVlIsIHN0YXJ0dXBzLCBvciBnZW5lcmFsIHRlY2gg
dHJlbmRzPyBXYW50IHRvIHNlZSBob3cgaGVhbHRoLCBlZHVjYXRpb24sIGFuZCBvdGhlciBmaWVs
ZHMgYXJlIHVzaW5nIGdhbWluZyBpbiBpbm5vdmF0aXZlIHdheXM/DQoNClNpZ24gdXAgZm9yIHRo
ZSBmaXJzdCBhbm51YWwgVU5DIEdhbWluZyBDb25mZXJlbmNlOiBUaGUgQnVzaW5lc3Mgb2YgUGxh
eS4gU3BvbnNvcmVkIGJ5IHRoZSBCVEMsIHlvdeKAmWxsIGhlYXIgZnJvbSBmb2xrcyBpbiBnYW1p
ZmljYXRpb24gYXQgSUJNLCBpbnRlcmVzdGluZyBsb2NhbCBzdGFydHVwcywgRGVsbOKAmXMgQWxp
ZW53YXJlLCBCbGl6emFyZCBHYW1lcywgYW5kIG1vcmUhDQoNCkx1bmNoIHdpbGwgYmUgcHJvdmlk
ZWQhDQoNClNwYWNlIGlzIGxpbWl0ZWQsIHNvIHNpZ24gdXAgZmFzdCENCmh0dHBzOi8vZG9jcy5n
b29nbGUuY29tL2Zvcm1zL2QvZS8xRkFJcFFMU2VVMFE3ZW9WdG5lS1NLeTg0Zzd2bGppY3RQeTR5
M0FSUG40QzNVanNrMHVNbmRyUS92aWV3Zm9ybT91c3A9c2ZfbGluaw0KDQpUaGUgdGVudGF0aXZl
IGFnZW5kYToNClRoZSBJbnRlcnNlY3Rpb24gb2YgQUkgYW5kIFBsYXkgLSBJQk3igJlzIFBoYWVk
cmEgQm9pbm9kaXJpcw0KVlIvQVIgYW5kIE5ldXJvU2NpZW5jZS9FbXBhdGh5IOKAkyBVTkPigJlz
IEplbm5pZmVyIEVsbGlvdHQNClRoZSBFdm9sdXRpb24gb2YgQXJ0aWZpY2lhbCBJbnRlbGxpZ2Vu
Y2UgaW4gR2FtZXMgYW5kIExpZmUgLSBDaHJpcyBIYXphcmQsIEhhemFyZG91cyBTb2Z0d2FyZQ0K
DQpCcmVha291dCBzZXNzaW9uczoNClBDIEdhbWluZyBpcyBEZWFkPyDigJMgQWxpZW53YXJl4oCZ
cyBDaHJpcyBTdXRwaGVuDQpNaWNyb3RyYW5zYWN0aW9ucyB3aXRoaW4gZ2FtaW5nOyBNQkEgcm9s
ZXMgYW5kIGhvdyB0byBnZXQgaW52b2x2ZWQgZHVyaW5nIGdhbWUgZGV2ZWxvcG1lbnQg4oCTIEJs
aXp6YXJkIEdhbWVz4oCZIFN0ZXBoZW4gSmFycmV0dA0KDQpUaGVyZSBhcmUgbW9yZSBkZXRhaWxz
IHRvIGNvbWUgYXMgd2UgYXBwcm9hY2ggdGhlIGV2ZW50LiBXZSBsb29rIGZvcndhcmQgdG8gc2Vl
aW5nIHlvdSBhbGwgc29vbiENCg0KDQotLSBZb3UgYXJlIGN1cnJlbnRseSBzdWJzY3JpYmVkIHRv
IGJ1c2l0ZWNoIGFzOiBtbGFsMTIzQGxpdmUudW5jLmVkdS4gVG8gdW5zdWJzY3JpYmUgY2xpY2sg
aGVyZTogaHR0cDovL2xpc3RzLnVuYy5lZHUvdT9pZD04OTYxMDAzMS4wOTJkOGVjNzMxNmVjMjM4
MjBkYzUxYTAzMGI1MzgyZCZuPVQmbD1idXNpdGVjaCZvPTM5NDQ4NjEzLCBvciBzZW5kIGEgYmxh
bmsgZW1haWwgdG8gbGVhdmUtMzk0NDg2MTMtODk2MTAwMzEuMDkyZDhlYzczMTZlYzIzODIwZGM1
MWEwMzBiNTM4MmRAbGlzdHNlcnYudW5jLmVkdS4NCg==
