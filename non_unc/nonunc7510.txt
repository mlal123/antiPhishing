VGhlIENhcm9saW5hIFdvbWVuJ3MgQ2VudGVyIGdlbmVyYWwgbWFpbGluZyBsaXN0DQpodHRwOi8v
d29tZW5zY2VudGVyLnVuYy5lZHUNCg0KW2NpZDppbWFnZTAwMS5wbmdAMDFEMzY3OEMuRkY0OTY5
QzBdDQoNCkZvbGxvdyBVczoNCkZhY2Vib29rOiBDYXJvbGluYSBXb21lbuKAmXMgQ2VudGVyDQpU
d2l0dGVyOiBAVU5DV29tZW5zQ3RyDQpJbnN0YWdyYW06IEBVTkNXb21lbnNDdHINCg0KDQpBdHRl
bnRpb24gQ2FyZWdpdmVycyENCg0KUGxlYXNlIHRha2UgbGVzcyB0aGFuIDUgbWludXRlcyB0byBj
b21wbGV0ZSBhIHZlcnkgYnJpZWYgc3VydmV5IGFib3V0IHlvdXIgY2FyZWdpdmluZyByZXNwb25z
aWJpbGl0aWVzLg0KDQpodHRwczovL3VuYy5hejEucXVhbHRyaWNzLmNvbS9qZmUvZm9ybS9TVl9l
c1NjTUptZkw2bk1XS0YNCg0KDQpUaGUgTmFrZWQgVHJ1dGgNCg0KV2VkbmVzZGF5LCBOb3ZlbWJl
ciAyOXRoIGZyb20gNToxNS03cG0gaW4gU3RvbmUgQ2VudGVyIFJvb20gMjA5DQoNCkpvaW4gdGhl
IENhcm9saW5hIFdvbWVu4oCZcyBDZW50ZXIgYW5kIHRoZSBGZW1pbmlzdCBNZWRpYSBTdHVkaWVz
IFByb2dyYW0gaW4gYSB3b3Jrc2hvcCBvbiBNZWRpYSBMaXRlcmFjeS4gRnJvbSBtZW1lcyB0byBt
dXNpYyB0byBhZHMgdG8gbW92aWVzLCB3ZeKAmWxsIGJlIHRha2luZyBhIGxvb2sgYXQgdGhlIHJv
bGUgcG9wdWxhciBpbWFnZXMgYW5kIGNvbnRlbnQgY2FuIHBsYXkgaW4gbm9ybWFsaXppbmcgdmlv
bGVuY2UgaW4gb3VyIHNvY2lldHkuIFRoaXMgd2lsbCBiZSBhbiBpbnRlcmFjdGl2ZSB3b3Jrc2hv
cCwgc28gY29tZSB3aXRoIHlvdXIgdGhvdWdodHMsIGlkZWFzLCBhbmQgcXVlc3Rpb25zIQ0KDQpo
dHRwczovL3d3dy5mYWNlYm9vay5jb20vZXZlbnRzLzIwOTUyOTg2OTU4ODc3OC8NCg0KDQoNClNo
ZeKAmXMgdGhlIEZpcnN0aXZhbA0KDQpXZWRuZXNkYXksIE5vdmVtYmVyIDI5IGZyb20gNy05cG0g
aW4gdGhlIFN0dWRlbnQgVW5pb24NCg0KSm9pbiBTaGXigJlzIHRoZSBGaXJzdCBVTkMgZm9yIHRo
ZWlyIGZpcnN0IGV2ZXIgRmlyc3RpdmFsISBMaXN0ZW4gdG8gdGhlIEV4ZWN1dGl2ZSBEaXJlY3Rv
ciBvZiB0aGUgRWFzdCBBZnJpY2FuIENlbnRlciwgSmVuIEhpbGwsIHNwZWFrIGF0IDdwbS4gQWZ0
ZXJ3YXJkcywgYnJvd3NlIFNoZeKAmXMgdGhlIEZpcnN0IG1lcmNoYW5kaXNlLCByZWNlaXZlIGJl
YXV0aWZ1bCBoZW5uYSB0YXR0b29zLCBhbmQgbXVuY2ggb24gZGVsaWNpb3VzIGZpbmdlciBmb29k
ISBBbGwgcHJvY2VlZHMgYmVuZWZpdCBnaXJsc+KAmSBlZHVjYXRpb24gaW4gbG93LWluY29tZSBj
b3VudHJpZXMuDQoNCmh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9ldmVudHMvNTU2NTEwMjExMzY0
MzEzLw0KDQpTcG9uc29yZWQgYnkgU2hl4oCZcyB0aGUgRmlyc3Qg4oCTIFVOQyBDaGFwZWwgSGls
bA0KDQoNClVOQyBHZW5kZXItQmFzZWQgVmlvbGVuY2UgUmVzZWFyY2ggR3JvdXA6IFNwZWFrZXIg
U2VyaWVzDQoNCldlZG5lc2RheSwgTm92ZW1iZXIgMjkgZnJvbSAxMjoxNS0xOjE1cG0gaW4gVGF0
ZSBUdXJuZXIgS3VyYWx0IEJ1aWxkaW5nIFJvb20gMTM1DQoNCkdlbmRlcmVkIFZpb2xlbmNlOiBN
aW5kZnVsbmVzcywgRW1vdGlvbnMsIGFuZCBTb2NpYWwgSnVzdGljZQ0KTmljb2xlIENhc3Rybywg
TUEg4oCTIFBoRCBTdHVkZW50LCBEZXBhcnRtZW50IG9mIENvbW11bmljYXRpb24sIFVOQy1DaGFw
ZWwgSGlsbA0KDQpUbyBjZW50ZXIgdGhlIGJvZHkgYXMgYSBzb3VyY2Ugb2Yga25vd2xlZGdlIGlz
IHRvIHJldmVhbCB0aGUgZ2VuZGVyZWQgdmlvbGVuY2UgdGhhdCB0ZWFjaGVzIGFsbCBnZW5kZXJz
LCB0aG91Z2ggbW9zdGx5IHdvbWVuLWlkZW50aWZpZWQgcGVyc29ucywgdG8gZGlzbWlzcyBhbmQg
aWdub3JlIGl0cyBpbmZvcm1hdGlvbi4gVGhpcyBiZWNvbWVzIGh1Z2VseSBwcm9ibGVtYXRpYyBh
cyBuZXcgcmVzZWFyY2ggb24gbWluZGZ1bG5lc3MgYW5kIGVtb3Rpb25zIHJldmVhbCBob3cgYm9k
eS1rbm93bGVkZ2Ugb2ZmZXJzIGFsbCBib2RpZXMgYSBjaGFuY2UgdG8gJ3JlcHJvZ3JhbScgcHJl
dmlvdXNseSB2aW9sZW50IHJlYWN0aW9ucyBhbmQgdGVuZGVuY2llcy4gaW4gdGhpcyB0YWxrLCBO
aWNvbGUgQ2FzdHJvIG9mZmVycyBhIHNpbXBsZSBjb21tdW5pY2F0aW9uIG1vZGVsIHRoYXQgYmVn
aW5zIHRvIHVudGFuZ2xlIHRoZSBjb25uZWN0aW9ucyBiZXR3ZWVuIGdlbmRlcmVkIHZpb2xlbmNl
LCBtaW5kZnVsbmVzcywgYW5kIGVtb3Rpb25zLiBQbGVhc2UgZmVlbCBmcmVlIHRvIGJyaW5nIHlv
dXIgbHVuY2ghDQoNCk5pY29sZSBDYXN0cm8gaXMgQ29tbXVuaWNhdGlvbnMgUGhEIHNjaG9sYXIg
YXQgdGhlIFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEgYXQgQ2hhcGVsIEhpbGwuIFRleGFz
LWJvcm4gYW5kIG1vc3RseSBUZXhhcy1yYWlzZWQsIE5pY29sZSB1c2VzIGZlbWluaW5lIHByb25v
dW5zIChzaGUpLiBIZXIgcmFwZSBjcmlzaXMgbm9ucHJvZml0IGV4cGVyaWVuY2UgYW5kIG1hc3Rl
cnMgZGVncmVlIGhhdmUgYm90aCBzb2xpZGlmaWVkIGhlciBpbnRlcmVzdCBpbiByZXNlYXJjaGlu
ZyBhbmQgdGVhY2hpbmcgd2F5cyB0byBwcmFjdGljZSBuZXcsIG5vbnZpb2xlbnQgY29tbXVuaWNh
dGlvbiBza2lsbHMuIEhlciBpbnRlcmVzdHMgaGF2ZSBleHBhbmRlZCB0byBjb25zZW50LCBtaW5k
ZnVsbmVzcywgZW1ib2RpZWQgcHJhY3RpY2UsIGFuZCBob3cgdGhlc2UgY29tYmluZSBmb3Igc29j
aWFsIGp1c3RpY2UgYWN0aXZpc3RzLiBTaGUncyBzdGlsbCBmaWd1cmluZyBvdXQgd2hhdCBpdCBt
ZWFucyBvbiBhIGRhaWx5IGxldmVsIHRvIHNheSB0aGF0IHNoZSdzIGNvbW1pdHRlZCB0byBsaXZp
bmcgZGFpbHkgYXMgYSBzY2hvbGFyLWFjdGl2aXN0LCBidXQgaGVyIGNvbW1pdG1lbnQgZG9lc24n
dCB3YXZlci4gQ3VycmVudGx5LCBzaGUncyB1cHNldCBieSBhbmQgY3VyaW91cyBhYm91dCB0aGUg
bGFjayBvZiBsYW5ndWFnZSByZXNvdXJjZXMgdGF1Z2h0IGZvciBjb25zZW50LCBlc3BlY2lhbGx5
IGJleW9uZCBzZXh1YWwgY29udGV4dHMuIEhvd2V2ZXIsIHNoZSdzIG1vdGl2YXRlZCBhbmQgaG9w
ZWZ1bCB0aGF0IHN0dWR5IG9mIHNlbGYtZXhwcmVzc2lvbiBtaWdodCBhbGxvdyBpbmRpdmlkdWFs
cyB0byBzZWUgdGFraW5nIHJpc2tzIHdpdGggbm9udmlvbGVudCBjb21tdW5pY2F0aW9uIGFzIGFu
IG9wcG9ydHVuaXR5LCBhcyBvcHBvc2VkIHRvIGEgdGhyZWF0Lg0KDQoNCihXKSBZb2dhIFN0dWR5
IEJyZWFrDQoNCk1vbmRheSwgRGVjZW1iZXIgNCBmcm9tIDY6MzAtODozMHBtIGluIEhpbnRvbiBK
YW1lcyBPbGQgV2VsbCBSb29tDQoNCldvbXhuIG9mIFdvcnRo4oCZcyBEZWNlbWJlciBNb250aGx5
IEdhdGhlcmluZw0KDQpXaXRoIHRoZSBmYWxsIHNlbWVzdGVyIGNvbWluZyB0byBhIGNsb3NlIGFu
ZCBmaW5hbCBwYXBlciBkZWFkbGluZXMgYW5kIGV4YW1zIGFwcHJvYWNoaW5nLCB3ZSBjb3VsZCBh
bGwgdXNlIHNvbWUgcmVsYXhhdGlvbiEgQ29tZSBqb2luIFVOQyBXb214biBvZiBXb3J0aCBvbiBE
ZWNlbWJlciA0dGggZm9yIGEgWW9nYSBTdHVkeSBCcmVhayEgUmVmcmVzaG1lbnRzIGFuZCBzbmFj
a3Mgd2lsbCBiZSBzZXJ2ZWQuDQoNCmh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9ldmVudHMvMTQ5
MTE5NDkwNDI5NTQyOA0KDQpMZWFybiBtb3JlIGFib3V0IFdvbXhuIG9mIFdvcnRoIGF0IGh0dHBz
Oi8vd29teG5vZndvcnRoLndlYi51bmMuZWR1DQoNCg0KMTUwIFNvdXRoIFJvYWQsIFN1aXRlIDEw
MSAoaW4gdGhlIFNvbmphIEhheW5lcyBTdG9uZSBDZW50ZXIpDQp3b21lbnNjZW50ZXIudW5jLmVk
dTxodHRwOi8vd29tZW5zY2VudGVyLnVuYy5lZHUvPg0KY3djQHVuYy5lZHU8bWFpbHRvOmN3Y0B1
bmMuZWR1Pg0KKDkxOSkgOTYyLTgzMDUNCg0KLS0tIFlvdSBhcmUgY3VycmVudGx5IHN1YnNjcmli
ZWQgdG8gY3djIGFzOiBNbGFsMTIzQGxpdmUudW5jLmVkdS4gVG8gdW5zdWJzY3JpYmUgc2VuZCBh
IGJsYW5rIA0KZW1haWwgdG8gbGVhdmUtMzk1MTQ1NDQtOTExMzE4OTMuYWU3OGNkNDliNTE0N2Jj
MTlhNzQwMzEyMDdhYjBmYzlAbGlzdHNlcnYudW5jLmVkdQ0K
