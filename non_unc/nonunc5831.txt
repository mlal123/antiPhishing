VGhlIENhcm9saW5hIFdvbWVuJ3MgQ2VudGVyIGdlbmVyYWwgbWFpbGluZyBsaXN0DQpodHRwOi8v
d29tZW5zY2VudGVyLnVuYy5lZHUNCg0KW2NpZDppbWFnZTAwMS5wbmdAMDFEMzE4NDMuODBCRkRG
NTBdDQoNCkZvbGxvdyBVczoNCkZhY2Vib29rOiBDYXJvbGluYSBXb21lbuKAmXMgQ2VudGVyDQpU
d2l0dGVyOiBAVU5DV29tZW5zQ3RyDQpJbnN0YWdyYW06IEBVTkNXb21lbnNDdHINCg0KDQpXZWxj
b21lIGJhY2ssIFRhciBIZWVscyENCg0KV2XigJlyZSBleGNpdGVkIHRvIGhhdmUgeW91IGJhY2sg
YW5kIGxvb2sgZm9yd2FyZCB0byBoYXZpbmcgeW91ciBkcm9wIGJ5IHRoZSBDZW50ZXIgYW5kIHRl
bGwgdXMgYWJvdXQgeW91ciBzdW1tZXIhDQoNCg0KDQpGRE9DIEJyZWFrZmFzdCDigJMgRlJFRSBS
SVNFIQ0KDQpUdWVzZGF5LCBBdWd1c3QgMjIgZnJvbSA5LTExYW0NCg0KV2XigJlsbCBoYXZlIGJp
c2N1aXRzIGFuZCBkb251dHMgZnJvbSBSaXNlLCBhcyB3ZWxsIGFzIGZydWl0LCBqdWljZSwgYW5k
IGNvZmZlZSEgRHJvcCBieSBhbnl0aW1lIGJldHdlZW4gOS0xMWFtIGFuZCBmdWVsIHVwIGZvciB5
b3VyIGZpcnN0IGRheSBvZiBjbGFzc2VzISBTdGF5IGFzIHNob3J0IG9yIGFzIGxvbmcgYXMgeW91
4oCZZCBsaWtlLCBhbmQgYnJpbmcgYSBmcmllbmTigJNhbGwgYXJlIHdlbGNvbWUhDQoNCltjaWQ6
aW1hZ2UwMDIucG5nQDAxRDMxODQzLjgwQkZERjUwXQ0KDQoNCk5ldyBHVlNDIERyb3AtaW4gSG91
cnMNCg0KT3VyIEdlbmRlciBWaW9sZW5jZSBTZXJ2aWNlcyBDb29yZGluYXRvcnMgaGF2ZSBuZXcg
ZHJvcC1pbiBob3VycyBhbmQgYW4gYWRkZWQgbG9jYXRpb24gdGhpcyBzZW1lc3RlciEgRHJvcC1p
biBob3VycyBiZWdpbiBvbiBXZWRuZXNkYXksIEF1Z3VzdCAyMyBhbmQgd2lsbCBub3QgYmUgaGVs
ZCBvbiBNb25kYXksIFNlcHRlbWJlciA0IGR1ZSB0byB0aGUgaG9saWRheS4gRm9yIG1vcmUgaW5m
b3JtYXRpb24sIHZpc2l0IG91ciB3ZWJzaXRlPGh0dHBzOi8vd29tZW5zY2VudGVyLnVuYy5lZHUv
cmVzb3VyY2VzL2dlbmRlci12aW9sZW5jZS1zZXJ2aWNlcy8+Lg0KDQoNCsK3ICAgICAgICAgTW9u
ZGF5cyAxLTRwbSBpbiBLb3VyeSBSZXNpZGVuY2UgSGFsbCByb29tIDE3Mw0KDQrCtyAgICAgICAg
IFdlZG5lc2RheXMgMTBhbS0xMnBtIGluIE9mZmljZSBvZiBGcmF0ZXJuaXR5ICYgU29yb3JpdHkg
TGlmZSBhbmQgQ29tbXVuaXR5IEludm9sdmVtZW50IChPRlNMQ0kpIGNvbmZlcmVuY2Ugcm9vbSAy
MTI2IChMb2NhdGVkIGluIEdyYW52aWxsZSBUb3dlcnMgU291dGgpDQoNCsK3ICAgICAgICAgVGh1
cnNkYXlzIDMtNXBtIGluIHRoZSBMR0JUUSBDZW50ZXIgKFNBU0IgU291dGgsIHN1aXRlIDMzMDgp
DQoNCg0KQ1dD4oCZcyAyMHRoIEFubml2ZXJzYXJ5DQoNClRoZSBDV0MgaXMgY2VsZWJyYXRpbmcg
aXRzIDIwdGggYW5uaXZlcnNhcnkgdGhpcyB5ZWFyISBLZWVwIHlvdXIgZXllIG91dCBmb3IgdXBk
YXRlcyBvbiBldmVudHMgYW5kIGNlbGVicmF0aW9ucywgaW5jbHVkaW5nDQoNCsK3ICAgICAgICAg
YSAyMHRoIEFubml2ZXJzYXJ5IEdhbGEsDQoNCsK3ICAgICAgICAgYSBkYXkgYXQgdGhlIFBsYXlt
YWtlcnMgUmVwZXJ0b3J5IENvbXBhbnkgZm9yIGEgcGVyZm9ybWFuY2Ugb2YgVGhlIENha2UgKGFj
Y29tcGFuaWVkIGJ5IGEgcmVjZXB0aW9uIGFuZCBkaXNjdXNzaW9uKSwgYW5kDQoNCsK3ICAgICAg
ICAgYSBsaXZlIGJyb2FkY2FzdCBvZiB0aGUgaGlzdG9yeSBhbmQgY3VycmVudCByb2xlIG9mIHdv
bWVu4oCZcyBjZW50ZXJzIGFuZCBvcmdhbml6YXRpb25zIG9uIFdVTkPigJlzIFRoZSBTdGF0ZSBv
ZiBUaGluZ3MuDQoNCg0KV2hhdCB0byBFeHBlY3Qgd2hlbiBZb3XigJlyZSBFeHBlY3RpbmcgQFVO
Qw0KDQpTZXB0ZW1iZXIgMjcgZnJvbSAxMi0xOjE1cG0qIGluIHRoZSBTdG9uZSBDZW50ZXLigJlz
IEhpdGNoY29jayBNdWx0aXB1cnBvc2UgUm9vbQ0KDQpXaGF0IHNob3VsZCB5b3UgZXhwZWN0IHdo
ZW4geW914oCZcmUgZXhwZWN0aW5nIGEgY2hpbGQ/IFdoZXRoZXIgeW914oCZcmUgcHJlZ25hbnQs
IGFkb3B0aW5nLCBvciBmb3N0ZXJpbmcsIHRoZSBvbmx5IHRoaW5nIHlvdSBrbm93IHlvdSBjYW4g
ZXhwZWN0IGlzIGxvdHMgb2YgY2hhbmdlIQ0KDQpKb2luIHVzIGZvciB0aGUgQ1dD4oCZcyBvdmVy
dmlldyBvZiBob3cgdG8gYWNjZXNzIHJlc291cmNlcyBvbiBhbmQgb2ZmIGNhbXB1cywgbGFjdGF0
aW9uIHJvb21zIGFuZCBhY2NvbW1vZGF0aW9uczsgdG8gZmluZCBhbmQgcGF5IGZvciBjaGlsZCBj
YXJlOyBhbmQgdG8gYXBwcm9hY2ggd29yay9saWZlIGJhbGFuY2UuDQoNClBsZWFzZSBSU1ZQIGhl
cmU8aHR0cHM6Ly9hcHBzLnJlc2VhcmNoLnVuYy5lZHUvZXZlbnRzL2luZGV4LmNmbT9ldmVudD1l
dmVudHMuZXZlbnREZXRhaWxzJmV2ZW50X2tleT00QTI1REUzMDJEQzI3NzQ1NzQ3QjlBOTEyMTU5
ODE0MTQyQ0M0QjJCPi4gQ29udGFjdCBjd2NAdW5jLmVkdTxtYWlsdG86Y3djQHVuYy5lZHU+IGZv
ciBtb3JlIGluZm9ybWF0aW9uLg0KKlBsZWFzZSBmZWVsIGZyZWUgdG8gYXJyaXZlIGEgZmV3IG1p
bnV0ZXMgZWFybHkgYW5kIHRvIGJyaW5nIHlvdXIgbHVuY2guDQoNCg0KDQpDb21wYXNzIENlbnRl
ciBSZWNydWl0aW5nIEFkdm9jYXRlcw0KDQpDb21wYXNzIENlbnRlciBmb3IgV29tZW4gYW5kIEZh
bWlsaWVzIGlzIHNlZWtpbmcgYXBwbGljYW50cyBmb3IgdGhlIGZvbGxvd2luZyBwb3NpdGlvbnM6
DQoNCg0KwrcgICAgICAgICBEb21lc3RpYyBWaW9sZW5jZSBDcmlzaXMgQWR2b2NhdGVzIC0gd29y
ayBkaXJlY3RseSB3aXRoIHN1cnZpdm9ycyBpbi1wZXJzb24gYW5kIG92ZXIgdGhlIHBob25lIG9u
IG91ciAyNC1ob3VyIGhvdGxpbmUgcHJvdmlkaW5nIGNyaXNpcyBpbnRlcnZlbnRpb24sIGVtb3Rp
b25hbCBzdXBwb3J0LCBzaGVsdGVyIHBsYWNlbWVudCwgYW5kIGNvbW11bml0eSByZWZlcnJhbHMu
IENvbXBhc3MgQ2VudGVyIGhhcyBhIGdyZWF0IG5lZWQgYXQgdGhpcyB0aW1lIGZvciBTcGFuaXNo
LXNwZWFraW5nIGFkdm9jYXRlcyENCg0KwrcgICAgICAgICBJUFYgQ29tbXVuaXR5IEVkdWNhdG9y
cyBmb3IgQWR1bHRzIC0gQ29tbXVuaXR5IGVkdWNhdG9ycyBmYWNpbGl0YXRlIHByZXNlbnRhdGlv
bnMsIHdvcmtzaG9wcywgYW5kIHRyYWluaW5ncyB0byBlZHVjYXRlIHRoZSBwdWJsaWMgYWJvdXQg
ZG9tZXN0aWMgdmlvbGVuY2UgYW5kIENvbXBhc3MgQ2VudGVyIHNlcnZpY2VzLiBDb21tdW5pdHkg
ZWR1Y2F0b3JzIGFsc28gc3RhZmYgdGFibGluZyBldmVudHMuDQoNCsK3ICAgICAgICAgU3Bhbmlz
aCBJbnRlcnByZXRlci9UcmFuc2xhdG9ycyAtIEludGVycHJldCB3aXRoIGNsaWVudHMgb3ZlciB0
aGUgaG90bGluZSBhbmQgaW4tcGVyc29uLCBhbmQvb3IgdHJhbnNsYXRlIHdyaXR0ZW4gbWF0ZXJp
YWxzIGluY2x1ZGluZyBlZHVjYXRpb25hbCBpbmZvcm1hdGlvbiBhbmQgY291cnQtcmVsYXRlZCBk
b2N1bWVudHMuDQoNCsK3ICAgICAgICAgSW5mb3JtYXRpb24gJiBSZWZlcnJhbCBWb2x1bnRlZXJz
IC0gZmlyc3QgcG9pbnQgb2YgY29udGFjdCBmb3IgaW5kaXZpZHVhbHMgd2hvIGNhbGwgb3IgY29t
ZSB0byBvdXIgb2ZmaWNlOyBJJlIgdm9sdW50ZWVycyB3ZWxjb21lIGNsaWVudHMsIGFzc2VzcyB0
aGVpciBuZWVkcyBhbmQgZ29hbHMsIGFuZCBjb25uZWN0IHRoZW0gdG8gQ29tcGFzcyBDZW50ZXIg
c2VydmljZXMgYW5kIGNvbW11bml0eSByZXNvdXJjZXMuDQoNCsK3ICAgICAgICAgQ2hpbGRjYXJl
IFZvbHVudGVlcnMgLSBwcm92aWRlIGNoaWxkY2FyZSBmb3IgQ29tcGFzcyBDZW50ZXIgY2xpZW50
cyB3aGlsZSB0aGV5IGF0dGVuZCBvdXIgc3VwcG9ydCBncm91cHMgYW5kIHdvcmtzaG9wcy4NCg0K
wrcgICAgICAgICBDb21tdW5pdHkgQXdhcmVuZXNzIFZvbHVudGVlcnMgLSBUaGVzZSB2b2x1bnRl
ZXJzIGhlbHAgc3ByZWFkIHRoZSB3b3JkIGFib3V0IENvbXBhc3MgQ2VudGVyIHNlcnZpY2VzLCBl
dmVudHMsIGFuZCB0cmFpbmluZ3MuIEF0IHRoZSBiZWdpbm5pbmcgb2YgZWFjaCBtb250aCwgdm9s
dW50ZWVycyBwaWNrIHVwIGZseWVycyBhdCBDb21wYXNzIENlbnRlciB0byBkaXN0cmlidXRlIHRv
IGRlc2lnbmF0ZWQgbG9jYXRpb25zIGluIHRoZSBPcmFuZ2UgQ291bnR5IGNvbW11bml0eS4gVGhp
cyByZXF1aXJlcyBhIDItaG91ciBwZXIgbW9udGggY29tbWl0bWVudC4NCg0KUGxlYXNlIHN1Ym1p
dCBhIHZvbHVudGVlciBhcHBsaWNhdGlvbiBoZXJlPGh0dHA6Ly9jb21wYXNzY3RyLm9yZy92b2x1
bnRlZXItYXBwbGljYXRpb24vPi4gTGVhcm4gbW9yZSBvbiB0aGUgQ0NXRiB3ZWJzaXRlPGh0dHA6
Ly9jb21wYXNzY2VudGVyLm9yZy8+Lg0KDQoNCk9DUkNDIFNlZWtzIFBhaWQsIFBhcnQtVGltZSBB
dWN0aW9uIEludGVybg0KDQpUaGUgT3JhbmdlIENvdW50eSBSYXBlIENyaXNpcyBDZW50ZXIgaXMg
bG9va2luZyBmb3IgYSBzZWxmLXN0YXJ0ZXIgd2l0aCBnb29kIG9yZ2FuaXphdGlvbmFsIHNraWxs
cyBhbmQgbm8gcmVzZXJ2YXRpb25zIGFib3V0IGFza2luZyBmb3IgZG9uYXRpb25zIHRvIGhlbHAg
dGhlbSBsYXVuY2ggdGhlaXIgMzB0aCBBbm51YWwgSG9saWRheSBBdWN0aW9uDQoNClRoZSBBdWN0
aW9uIEludGVybiBwb3NpdGlvbjoNCg0K4oCiICAgICAgICAgSXMgYSB0ZW1wb3JhcnksIHBhcnQt
dGltZSBpbnRlcm5zaGlwIHRoYXQgd2lsbCBiZWdpbiBpbW1lZGlhdGVseSBhbmQgY29udGludWUg
dGhyb3VnaCBEZWNlbWJlciAyMDE3Lg0KDQrigKIgICAgICAgICBXaWxsIGJlIHBhaWQgb24gYSBj
b250cmFjdHVhbCBiYXNpczogJDEwL2hvdXIsIG5vdCB0byBleGNlZWQgNTAwIGhvdXJzLg0KDQri
gKIgICAgICAgICBSZXF1aXJlcyAyMC0yOCBob3Vycy93ZWVrLCBpbmNsdWRpbmcgc29tZSBldmVu
aW5ncyBhbmQgd2Vla2VuZHMgKHdpdGggYWR2YW5jZSBub3RpY2UpLg0KDQrigKIgICAgICAgICBS
ZXF1aXJlcyByZWxpYWJsZSB0cmFuc3BvcnRhdGlvbiBmb3IgcGlja2luZyB1cCBkb25hdGVkIGl0
ZW1zIGZyb20gbG9jYWwgYnVzaW5lc3NlcyBhbmQgYXR0ZW5kaW5nIG1lZXRpbmdzLg0KDQpEZXNj
cmlwdGlvbjoNClRoZSBBdWN0aW9uIEludGVybiB3aWxsIHdvcmsgY2xvc2VseSB3aXRoIHRoZSBE
ZXZlbG9wbWVudCAmIEFkbWluaXN0cmF0aXZlIENvb3JkaW5hdG9yIHRvIGFzc2lzdCB3aXRoIHBy
ZXBhcmF0aW9ucyBmb3Igb3VyIDMwdGggQW5udWFsIEhvbGlkYXkgQXVjdGlvbiwgd2hpY2ggd2ls
bCBiZSBoZWxkIG9uIFN1bmRheSwgRGVjZW1iZXIgMywgMjAxNy4gVGhlIEF1Y3Rpb24gSW50ZXJu
IGlzIHByaW1hcmlseSByZXNwb25zaWJsZSBmb3Igc29saWNpdGluZyBhbmQgcGlja2luZyB1cCBh
dWN0aW9uIGl0ZW0gZG9uYXRpb25zIGZyb20gbG9jYWwgYnVzaW5lc3NlcyBhbmQgc3VwcG9ydGVy
cyBhcyB3ZWxsIGFzIGZvciBhc3Npc3Rpbmcgd2l0aCBkYXRhIGVudHJ5IGFuZCBvdGhlciBldmVu
dCBwbGFubmluZyB0YXNrcy4gVGhlIGludGVybiB3aWxsIGdhaW4gYmFzaWMgZnVuZHJhaXNpbmcg
YW5kIGFkbWluaXN0cmF0aXZlIHNraWxscyBpbmNsdWRpbmcgZXZlbnQgcGxhbm5pbmcsIHdvcmtp
bmcgd2l0aCBkb25vcnMsIHByZXBhcmluZyBmdW5kcmFpc2luZyBtYXRlcmlhbHMsIGRhdGFiYXNl
IG1hbmFnZW1lbnQsIGFuZCBjb21tdW5pY2F0aW9ucy4NCg0KVGhlIGlkZWFsIGNhbmRpZGF0ZSBm
b3IgdGhpcyBwb3NpdGlvbiBpcyBhIHBlb3BsZSBwZXJzb24gd2hvIGhhcyBubyByZXNlcnZhdGlv
bnMgYXNraW5nIGZvciBkb25hdGlvbnMuIFRoZSBpbnRlcm4gd2lsbCBoYXZlIGdvb2Qgb3JnYW5p
emF0aW9uYWwgc2tpbGxzIGFuZCB3aWxsIGJlIGNhcGFibGUgb2YgbWFuYWdpbmcgbXVsdGlwbGUg
cHJvamVjdHMgYXQgb25jZS4gVGhlIEF1Y3Rpb24gSW50ZXJuIHdpbGwgYmUgc2VsZi1tb3RpdmVk
IGFuZCBjYXBhYmxlIG9mIHdvcmtpbmcgaW5kZXBlbmRlbnRseS4gVGhpcyBwZXJzb24gd2lsbCBo
YXZlIGFuIHVwYmVhdCBhbmQgcGVyc2V2ZXJpbmcgYXR0aXR1ZGUgYXMgcGFydCBvZiB0aGVpciBj
b21taXRtZW50IHRvIHBvc2l0aXZlbHkgcmVwcmVzZW50aW5nIHRoZSBDZW50ZXIgaW4gdGhlIGNv
bW11bml0eS4NCg0KVGhlIE9yYW5nZSBDb3VudHkgUmFwZSBDcmlzaXMgQ2VudGVyIHZhbHVlcyBk
aXZlcnNpdHkgYW5kIHdlIHdlbGNvbWUgYW5kIGVuY291cmFnZSBhcHBsaWNhbnRzIGZyb20gZGl2
ZXJzZSByYWNpYWwgZ3JvdXBzLCBzZXh1YWwgb3JpZW50YXRpb25zLCBuYXRpb25hbCBvcmlnaW5z
LCByZWxpZ2lvbnMsIGFnZXMsIGFuZCBkaXNhYmlsaXR5IHN0YXR1c2VzLg0KDQpUbyBhcHBseSwg
cGxlYXNlIHNlbmQgYSByZXN1bWUsIGNvdmVyIGxldHRlciwgYW5kIHRocmVlIHJlZmVyZW5jZXMg
dG8gRWR1Y2F0aW9uIERpcmVjdG9yIFJhY2hlbCBWYWxlbnRpbmUgYXQgcnZhbGVudGluZUBvY3Jj
Yy5vcmcgYnkgQXVndXN0IDI4LCAyMDE3LiBObyBwaG9uZSBjYWxscywgcGxlYXNlLiBMZWFybiBt
b3JlIGF0IG9jcmNjLm9yZzxodHRwOi8vb2NyY2Mub3JnLz4uDQoNCg0KDQoxNTAgU291dGggUm9h
ZCwgU3VpdGUgMTAxIChpbiB0aGUgU29uamEgSGF5bmVzIFN0b25lIENlbnRlcikNCndvbWVuc2Nl
bnRlci51bmMuZWR1PGh0dHA6Ly93b21lbnNjZW50ZXIudW5jLmVkdS8+DQpjd2NAdW5jLmVkdTxt
YWlsdG86Y3djQHVuYy5lZHU+DQooOTE5KSA5NjItODMwNQ0KDQoNCg0KICAqICAgLS0gWW91IGFy
ZSBjdXJyZW50bHkgc3Vic2NyaWJlZCB0bw0KY3djIGFzOiBzZ2lzdEBlbWFpbC51bmMuZWR1PG1h
aWx0bzpzZ2lzdEBlbWFpbC51bmMuZWR1PiAuIFRvIHVuc3Vic2NyaWJlIHNlbmQgYSBibGFuaw0K
ZW1haWwgdG8gbGVhdmUtMzg5NDY0MTktNTU2MDM3NzUuYTFiNzg1ZTkzMThhM2QyNDM1MjdmZDgz
MWYyYjU0ZmRAbGlzdHNlcnYudW5jLmVkdTxtYWlsdG86bGVhdmUtMzg5NDY0MTktNTU2MDM3NzUu
YTFiNzg1ZTkzMThhM2QyNDM1MjdmZDgzMWYyYjU0ZmRAbGlzdHNlcnYudW5jLmVkdT4NCg0KLS0t
IFlvdSBhcmUgY3VycmVudGx5IHN1YnNjcmliZWQgdG8gY3djIGFzOiBNbGFsMTIzQGxpdmUudW5j
LmVkdS4gVG8gdW5zdWJzY3JpYmUgc2VuZCBhIGJsYW5rIA0KZW1haWwgdG8gbGVhdmUtMzkxNzk0
MzEtOTExMzE4OTMuYWU3OGNkNDliNTE0N2JjMTlhNzQwMzEyMDdhYjBmYzlAbGlzdHNlcnYudW5j
LmVkdQ0K
