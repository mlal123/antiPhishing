Q29uZ3JhdHVsYXRpb25zISBZb3UgaGF2ZSBzdWNjZXNzZnVsbHkgc3VibWl0dGVkIHlv
dXIgSUJNIGpvYiBhcHBsaWNhdGlvbi4NCiBXZSBhcHByZWNpYXRlIHlvdXIgaW50ZXJl
c3QgaW4gSUJNIHJlZ2FyZGluZyBwb3NpdGlvbiA2NjE1M0JSIDIwMTcgSW50ZXJuc2hp
cC0gU29mdHdhcmUgRGV2ZWxvcGVyIA0KVGhlcmXigJlzIG5ldmVyIGJlZW4gYSBiZXR0
ZXIgdGltZSB0byBqb2luIElCTSEgIFdlIGxpdmUgaW4gYSB0aW1lIG9mIHJlbWFya2Fi
bGUgY2hhbmdlIGFuZCBvcHBvcnR1bml0eS4gRGF0YSBhbmQgdGVjaG5vbG9neSBhcmUg
dHJhbnNmb3JtaW5nIGluZHVzdHJpZXMsIHNvY2lldHkgYW5kIGV2ZW4gdGhlIHdvcmtw
bGFjZSBieSBjcmVhdGluZyBwcm9mZXNzaW9ucyB0aGF0IGRpZG7igJl0IGV4aXN0IGJl
Zm9yZSB0aGUgZW1lcmdlbmNlIG9mIGFuYWx5dGljcywgY2xvdWQsIHNvY2lhbCBhbmQg
bW9iaWxlLiBJQk0gaXMgYSBsZWFkZXIgaW4gdGhpcyBnbG9iYWwgdHJhbnNmb3JtYXRp
b24gYW5kIGp1c3QgdGhlIHBsYWNlIHRvIGRldmVsb3AgeW91ciBleHBlcnRpc2UgZm9y
IG5hdmlnYXRpbmcgdGhpcyBuZXcgd29ybGQuDQogDQpXZeKAmXJlIGV4Y2l0ZWQgeW91
4oCZdmUgdGFrZW4gdGhlIGZpcnN0IHN0ZXAgdG8gSm9pbiB1cw0KIA0KVG8gbGVhcm4g
bW9yZSBhYm91dCBJQk06IA0KIA0KVmlzaXQgaWJtLmNvbS9qb2JzDQpTdWJzY3JpYmUg
dG8gSUJNam9icyBibG9nIGZvciBJQk0gY2FyZWVyIGluc2lnaHRzLCBuZXdzIGFuZCBs
YXRlc3Qgam9iIG9wcG9ydHVuaXRpZXMuDQpDb25uZWN0IHdpdGggdXMgb24gRmFjZWJv
b2ssIExpbmtlZEluLCBUd2l0dGVyLCBZb3VUdWJlDQoNCllvdXIgcmVmZXJlbmNlIG51
bWJlciBpczogMTQ0Mzc4NQ0K